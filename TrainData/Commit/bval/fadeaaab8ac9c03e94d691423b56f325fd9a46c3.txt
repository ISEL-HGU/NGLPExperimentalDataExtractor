import java.util.stream.Stream;
import org.apache.bval.util.reflection.Reflection;
import org.apache.commons.weaver.privilizer.Privilizing;
import org.apache.commons.weaver.privilizer.Privilizing.CallTo;
@Privilizing(@CallTo(Reflection.class))
    public static Method getter(Class<?> clazz, String property) {
        return Reflection.find(clazz, t -> Stream.of(Reflection.getDeclaredMethods(t)).filter(Methods::isGetter)
            .filter(m -> property.equals(Methods.propertyName(m))).findFirst().orElse(null));
    }

