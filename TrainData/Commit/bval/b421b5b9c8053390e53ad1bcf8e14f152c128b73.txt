import java.util.HashSet;
import java.util.Set;
import javax.validation.metadata.MethodType;
import org.apache.bval.jsr.metadata.EmptyBuilder;
    // synchronization unnecessary
    private final Set<Class<?>> knownUnconstrainedTypes = new HashSet<>();
        final MetadataBuilder.ForBean<T> builder =
            knownUnconstrainedTypes.contains(beanClass) ? EmptyBuilder.instance().forBean() : builder(beanClass);
        final BeanD<T> beanD = new BeanD<>(new MetadataReader(validatorFactory, beanClass).forBean(builder));

        if (beanD.isBeanConstrained() || !(beanD.getConstrainedConstructors().isEmpty()
            && beanD.getConstrainedMethods(MethodType.GETTER, MethodType.NON_GETTER).isEmpty())) {
            @SuppressWarnings("unchecked")
            final BeanD<T> result =
                Optional.ofNullable((BeanD<T>) beanDescriptors.putIfAbsent(beanClass, beanD)).orElse(beanD);
            return result;
        }
        knownUnconstrainedTypes.add(beanClass);
        return beanD;
