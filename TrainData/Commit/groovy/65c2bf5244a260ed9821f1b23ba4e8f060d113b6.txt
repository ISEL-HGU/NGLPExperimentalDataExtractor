        this.visitAnnotationsOpt(ctx.annotationsOpt()).forEach(packageNode::addAnnotation);
    public AssertStatement visitAssertStatement(AssertStatementContext ctx) {
    }
    @Override
    public AssertStatement visitAssertStmtAlt(AssertStmtAltContext ctx) {
        return this.configureAST(this.visitAssertStatement(ctx.assertStatement()), ctx);
    public Expression visitPostfixExpression(PostfixExpressionContext ctx) {
            PostfixExpression postfixExpression = new PostfixExpression(pathExpr, createGroovyToken(ctx.op));

            if (ctx.isInsideAssert) {
                // powerassert requires different column for values, so we have to copy the location of op
                return this.configureAST(postfixExpression, ctx.op);
            } else {
                return this.configureAST(postfixExpression, ctx);
            }
    public Expression visitPostfixExprAlt(PostfixExprAltContext ctx) {
        return this.visitPostfixExpression(ctx.postfixExpression());
    }

    @Override
