import org.codehaus.groovy.ast.AnnotationNode;
import org.codehaus.groovy.ast.ClassNode;
import java.util.List;

    public static final EmptyExpression INSTANCE = new EmptyExpression() {
        @Override
        public void setType(ClassNode t) {
            throw createUnsupportedOperationException();
        }

        @Override
        public void addAnnotation(AnnotationNode value) {
            throw createUnsupportedOperationException();
        }

        @Override
        public void addAnnotations(List<AnnotationNode> annotations) {
            throw createUnsupportedOperationException();
        }

        @Override
        public void setSynthetic(boolean synthetic) {
            throw createUnsupportedOperationException();
        }

        @Override
        public void setDeclaringClass(ClassNode declaringClass) {
            throw createUnsupportedOperationException();
        }

        @Override
        public void setHasNoRealSourcePosition(boolean value) {
            throw createUnsupportedOperationException();
        }

        private UnsupportedOperationException createUnsupportedOperationException() {
            return new UnsupportedOperationException("EmptyExpression.INSTANCE is immutable");
        }
    };
