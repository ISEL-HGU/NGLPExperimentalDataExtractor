     * Negate a boolean on stack.
    /* *
        for (Parameter parameter : param) {
            ClassNode type = parameter.getType();
            for (ClassNode anInterface : interfaces) {
                if (anInterface.isUsingGenerics()) return true;
        for (ClassNode anInterface : interfaces) {
            GenericsType interfacePart = new GenericsType(anInterface);
        for (GenericsType genericsType : genericsTypes) {
            String name = genericsType.getName();
            writeGenericsBounds(ret, genericsType, true);
            for (ClassNode bound : bounds) {
                writeGenericsBoundType(ret, bound, writeInterfaceMarker);
        for (GenericsType type : types) {
            if (type.getType().isArray()) {
                addSubTypes(ret, new GenericsType[]{new GenericsType(type.getType().getComponentType())}, "", "");
            } else {
                if (type.isPlaceholder()) {
                    String name = type.getName();
                } else if (type.isWildcard()) {
                    if (type.getUpperBounds() != null) {
                        writeGenericsBounds(ret, type, false);
                    } else if (type.getLowerBound() != null) {
                        writeGenericsBounds(ret, type, false);
                    writeGenericsBounds(ret, type, false);
        return cu1 != null && cu1 == cu2;
        for (char aChar : chars) {
            h = 31 * h  aChar;
