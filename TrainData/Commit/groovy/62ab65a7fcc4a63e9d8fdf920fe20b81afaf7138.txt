import org.codehaus.groovy.ast.GenericsType.GenericsTypeName;
import java.util.Arrays;
import java.util.Optional;
        return Arrays.stream(params).map(param -> {
            String name = param.getType().getUnresolvedName();
            Optional<GenericsType> value = genericsPlaceholderAndTypeMap.entrySet().stream()
                .filter(e -> e.getKey().getName().equals(name)).findFirst().map(e -> e.getValue());
            ClassNode type = value.map(GenericsType::getType).orElseGet(() -> makeRawType(param.getType()));
            return new Parameter(type, param.getName());
        }).toArray(Parameter[]::new);
