import org.codehaus.groovy.ast.*;
import org.codehaus.groovy.ast.expr.ClosureExpression;
 * Handles generation of code for the {@link AutoFinal} annotation.
        processClassesConstructorsMethods(nodes, source);
        processClosures(nodes, source);
    }

    private void processClassesConstructorsMethods(ASTNode[] nodes, final SourceUnit unit) {
    private void processClosures(ASTNode[] nodes, final SourceUnit source) {
        final ASTNode node = nodes[1];
        if(node instanceof ClassNode) {
            ClassNode annotatedClass = (ClassNode) node;

            final ClassCodeVisitorSupport visitor = new ClassCodeVisitorSupport() {
                @Override
                public void visitClosureExpression(ClosureExpression expression) {
                    if (expression.isSynthetic()) { return; }
                    Parameter[] origParams = expression.getParameters();
                    for (Parameter p : origParams) {
                        p.setModifiers(p.getModifiers() | Modifier.FINAL);
                    }
                    super.visitClosureExpression(expression);
                }

                protected SourceUnit getSourceUnit() {
                    return source;
                }
            };

            visitor.visitClass(annotatedClass);
        }
    }



