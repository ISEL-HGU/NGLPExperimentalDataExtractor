     * @param bytecodeVersion The parameter can take one of the values in {@link #ALLOWED_JDKS}.
     * @param bytecodeVersion The parameter can take one of the values in {@link #ALLOWED_JDKS}.
     * Checks if the specified bytecode version string represents a JDK 1.8 compatible
     * bytecode version.
     * @param bytecodeVersion The parameter can take one of the values in {@link #ALLOWED_JDKS}.
     * @return true if the bytecode version is JDK 1.87
     */
    public static boolean isPostJDK8(String bytecodeVersion) {
        return new BigDecimal(bytecodeVersion).compareTo(new BigDecimal(JDK8)) >= 0;
    }

    /**
     * Checks if the specified bytecode version string represents a JDK 1.8 compatible
     * bytecode version.
     * @param bytecodeVersion The parameter can take one of the values in {@link #ALLOWED_JDKS}.
     * @return true if the bytecode version is JDK 9.0
     */
    public static boolean isPostJDK9(String bytecodeVersion) {
        return new BigDecimal(bytecodeVersion).compareTo(new BigDecimal(JDK9)) >= 0;
    }

    /**
