                        setPropertyOfSuperClass(classNode, expression, mv);
    private void setPropertyOfSuperClass(ClassNode classNode, PropertyExpression expression, MethodVisitor mv) {
        MethodNode setter = findSetterOfSuperClass(classNode, fieldNode);
        MethodNode getter = findGetterOfSuperClass(classNode, fieldNode);
        if (fieldNode.isPrivate() && !getterAndSetterExists(setter, getter)) {
    private boolean getterAndSetterExists(MethodNode setter, MethodNode getter) {
        return null != setter && null != getter && setter.getDeclaringClass().equals(getter.getDeclaringClass());
    }
    private MethodNode findSetterOfSuperClass(ClassNode classNode, FieldNode fieldNode) {
        String setterMethodName = "set"  MetaClassHelper.capitalize(fieldNode.getName());
        return classNode.getSuperClass().getSetterMethod(setterMethodName);
    }
    private MethodNode findGetterOfSuperClass(ClassNode classNode, FieldNode fieldNode) {
        String getterMethodName = "get"  MetaClassHelper.capitalize(fieldNode.getName());

        return classNode.getSuperClass().getGetterMethod(getterMethodName);
