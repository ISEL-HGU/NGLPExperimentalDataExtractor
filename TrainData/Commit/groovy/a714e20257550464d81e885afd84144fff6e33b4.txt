import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.StringTokenizer;

        commandLineList.add(getClasspathRelative(classpath));
    private String getClasspathRelative(Path classpath) {
        String raw = classpath.toString();
        String baseDir = getProject().getBaseDir().getAbsolutePath();
        if (!raw.startsWith(baseDir)) {
            return raw;
        }
        return "."  raw.substring(baseDir.length());
    }

        commandLineList.add(getClasspathRelative(classpath));
        log.verbose("Compilation arguments:\n"  DefaultGroovyMethods.join(commandLineList, "\n"));
        return commandLineList.toArray(new String[commandLineList.size()]);
        final Execute executor = new Execute();
