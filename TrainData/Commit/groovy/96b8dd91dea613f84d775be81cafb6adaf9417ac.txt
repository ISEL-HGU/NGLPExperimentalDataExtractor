        boolean reversed = memberHasValue(annotation, "reversed", true);
                createCompareToMethodBody(properties, reversed)
            createComparatorFor(classNode, property, reversed);
    private static Statement createCompareToMethodBody(List<PropertyNode> properties, boolean reversed) {
            statements.add(returnS(cmpX(varX(THIS_HASH), varX(OTHER_HASH), reversed)));
                statements.add(assignS(varX(VALUE), cmpX(propX(varX("this"), propName), propX(varX(OTHER), propName), reversed)));
    private static Statement createCompareMethodBody(PropertyNode property, boolean reversed) {
                returnS(cmpX(propX(varX(ARG0), propName), propX(varX(ARG1), propName), reversed))
    private static void createComparatorFor(ClassNode classNode, PropertyNode property, boolean reversed) {
                createCompareMethodBody(property, reversed)
