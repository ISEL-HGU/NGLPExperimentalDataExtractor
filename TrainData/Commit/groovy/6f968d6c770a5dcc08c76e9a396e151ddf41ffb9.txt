import org.codehaus.groovy.ast.ASTNode;
import org.codehaus.groovy.ast.AnnotationNode;
import org.codehaus.groovy.ast.ClassHelper;
import org.codehaus.groovy.ast.ClassNode;
import org.codehaus.groovy.ast.ConstructorNode;
import org.codehaus.groovy.ast.FieldNode;
import org.codehaus.groovy.ast.GenericsType;
import org.codehaus.groovy.ast.GroovyClassVisitor;
import org.codehaus.groovy.ast.InnerClassNode;
import org.codehaus.groovy.ast.MethodNode;
import org.codehaus.groovy.ast.MixinNode;
import org.codehaus.groovy.ast.Parameter;
import org.codehaus.groovy.ast.PropertyNode;
import java.util.Collections;
import java.util.HashSet;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Set;

        super("<UnionType:"  asArrayDescriptor(classNodes)  ">", 0, ClassHelper.OBJECT_TYPE);
        delegates = classNodes == null ? ClassNode.EMPTY_ARRAY : classNodes;

            if (sb.length() > 0) sb.append("");
            if (annotations != null) nodes.addAll(annotations);
            if (annotations != null) nodes.addAll(annotations);
            if (node != null) return node;
            if (node != null) return node;
            if (methods != null) nodes.addAll(methods);
            if (field != null) return field;
            if (fields != null) nodes.addAll(fields);
            if (interfaces != null) Collections.addAll(nodes, interfaces);
            if (methods != null) nodes.addAll(methods);
            if (properties != null) nodes.addAll(properties);
            if (interfaces != null) Collections.addAll(nodes, interfaces);
            if (interfaces != null) Collections.addAll(nodes, interfaces);
            hash = 31 * hash  delegate.hashCode();
