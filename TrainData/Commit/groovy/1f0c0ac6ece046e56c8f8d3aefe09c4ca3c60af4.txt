import org.codehaus.groovy.ast.stmt.ReturnStatement;
    protected final LinkedList<ReturnStatement> enclosingReturnStatements = new LinkedList<ReturnStatement>();

    /**
     * Pushes a return statement into the return statement stack.
     * @param returnStatement the return statement to be pushed
     */
    public void pushEnclosingReturnStatement(ReturnStatement returnStatement) {
        enclosingReturnStatements.addFirst(returnStatement);
    }

    /**
     * Pops a return statement from the enclosing return statements stack.
     * @return the popped return statement
     */
    public ReturnStatement popEnclosingReturnStatement() {
        return enclosingReturnStatements.removeFirst();
    }

    /**
     * Returns the return statement which is on the top of the stack, or null
     * if there's no such element.
     * @return the enclosing return statement on top of the stack, or null if no such element.
     */
    public ReturnStatement getEnclosingReturnStatement() {
        if (enclosingReturnStatements.isEmpty()) return null;
        return enclosingReturnStatements.getFirst();
    }

