import org.codehaus.groovy.ast.expr.Expression;
import static org.codehaus.groovy.syntax.Token.newSymbol;
                                newSymbol(Types.ASSIGN, -1, -1),
                                newSymbol(Types.ASSIGN, -1, -1),
                                newSymbol(Types.COMPARE_NOT_EQUAL, -1, -1),
    /**
     * See https://docs.oracle.com/javase/specs/jls/se9/html/jls-14.html
     * 14.20.3.1. Basic try-with-resources
     *
     * If a basic try-with-resource statement is of the form:
     * try (VariableAccess ...)
     *      Block
     *
     * then the resource is first converted to a local variable declaration by the following translation:
     * try (T #r = VariableAccess ...) {
     *      Block
     * }
     */
    public BinaryExpression transformResourceAccess(Expression variableAccessExpression) {
        return new BinaryExpression(
                new VariableExpression(genResourceName()),
                newSymbol(Types.ASSIGN, -1, -1),
                variableAccessExpression
        );
    }

    private int resourceCnt = 0;
    private String genResourceName() {
        return "__$$resource"  resourceCnt;
    }

