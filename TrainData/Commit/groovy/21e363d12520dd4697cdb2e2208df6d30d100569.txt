import groovy.transform.NamedParam;
    public static void traverse(final File self,
            @NamedParam(value = "type", type = FileType.class)
            @NamedParam(value = "preDir", type = Closure.class)
            @NamedParam(value = "preRoot", type = Boolean.class)
            @NamedParam(value = "postDir", type = Closure.class)
            @NamedParam(value = "postRoot", type = Boolean.class)
            @NamedParam(value = "visitRoot", type = Boolean.class)
            @NamedParam(value = "maxDepth", type = Integer.class)
            @NamedParam(value = "filter", type = Object.class)
            @NamedParam(value = "nameFilter", type = Object.class)
            @NamedParam(value = "excludeFilter", type = Object.class)
            @NamedParam(value = "excludeNameFilter", type = Object.class)
            @NamedParam(value = "sort", type = Closure.class)
            final Map<String, ?> options,
            @ClosureParams(value = SimpleType.class, options = "java.io.File")
            final Closure closure)
                throws FileNotFoundException, IllegalArgumentException {
    public static void traverse(final File self,
            @NamedParam(value = "type", type = FileType.class)
            @NamedParam(value = "preDir", type = Closure.class)
            @NamedParam(value = "preRoot", type = Boolean.class)
            @NamedParam(value = "postDir", type = Closure.class)
            @NamedParam(value = "postRoot", type = Boolean.class)
            @NamedParam(value = "visitRoot", type = Boolean.class)
            @NamedParam(value = "maxDepth", type = Integer.class)
            @NamedParam(value = "filter", type = Object.class)
            @NamedParam(value = "nameFilter", type = Object.class)
            @NamedParam(value = "excludeFilter", type = Object.class)
            @NamedParam(value = "excludeNameFilter", type = Object.class)
            @NamedParam(value = "sort", type = Closure.class)
            final Map<String, ?> options)
                throws FileNotFoundException, IllegalArgumentException {
