import java.util.Optional;
import java.util.stream.Collector;
import java.util.stream.Collectors;
    /**
     * Returns a {@link Collector} that gets the first element.
     *
     * @return a {@link Collector} which implements the first operation
     * @since 3.0.0
     */
    public static <T> Collector<T, ?, Optional<T>> first(Collectors self) {
        return Collectors.reducing((v1, v2) -> v1);
    }

    /**
     * Returns a {@link Collector} that gets the last element.
     *
     * @return a {@link Collector} which implements the last operation
     * @since 3.0.0
     */
    public static <T> Collector<T, ?, Optional<T>> last(Collectors self) {
        return Collectors.reducing((v1, v2) -> v2);
    }

