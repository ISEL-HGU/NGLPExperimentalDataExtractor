import java.io.IOException;
    private boolean doCompileWithSystemJavaCompiler(CompilationUnit cu, List<String> files, String[] javacParameters, StringBuilderWriter javacOutput) throws IOException {
        try (StandardJavaFileManager fileManager = compiler.getStandardFileManager(null, null, charset)) {
            final Set<JavaFileObject> compilationUnitSet = cu.getJavaCompilationUnitSet(); // java stubs already added
            // add java source files to compile
            fileManager.getJavaFileObjectsFromFiles(
                    files.stream()
                            .map(File::new)
                            .collect(Collectors.toList())
            ).forEach(compilationUnitSet::add);
            javax.tools.JavaCompiler.CompilationTask compilationTask = compiler.getTask(
                    javacOutput,
                    fileManager,
                    null,
                    Arrays.asList(javacParameters),
                    Collections.emptyList(),
                    compilationUnitSet
            );
            return compilationTask.call();
        }
        StringBuilderWriter javacOutput = new StringBuilderWriter();
                } catch (IOException e) {
                    javacReturnValue = 1;
                    cu.getErrorCollector().addFatalError(new ExceptionMessage(e, true, cu));
