import java.util.ArrayList;
import java.util.Map;
import javafx.util.Pair;
import org.apache.gora.kudu.mapping.Column;
import org.apache.kudu.ColumnSchema;
import org.apache.kudu.Schema;
import org.apache.kudu.Type;
import org.apache.kudu.client.ColumnRangePredicate;
import org.apache.kudu.client.CreateTableOptions;
import org.apache.kudu.client.PartialRow;
import org.apache.kudu.util.DecimalUtil;
    try {
      List<ColumnSchema> columns = new ArrayList<>();
      List<String> keys = new ArrayList<>();
      for (Column pk : kuduMapping.getPrimaryKey()) {
        columns.add(new ColumnSchema.ColumnSchemaBuilder(pk.getName(), Type.valueOf(pk.getDataType().toString())).key(true).build());
        keys.add(pk.getName());
      }
      for (Map.Entry<String, Column> clt : kuduMapping.getFields().entrySet()) {
        Column aColumn = clt.getValue();
        ColumnSchema aColumnSch;
        ColumnSchema.ColumnSchemaBuilder aBaseColumn = new ColumnSchema.ColumnSchemaBuilder(aColumn.getName(), Type.valueOf(aColumn.getDataType().toString())).nullable(true);
        if (aColumn.getDataType().getType() == Column.DataType.DECIMAL) {
          aColumnSch = aBaseColumn.typeAttributes(DecimalUtil.typeAttributes(aColumn.getDataType().getPrecision(), aColumn.getDataType().getScale())).build();
        } else {
          aColumnSch = aBaseColumn.build();
        }
        columns.add(aColumnSch);
      }
      Schema sch = new Schema(columns);
      CreateTableOptions cto = new CreateTableOptions();
      if (kuduMapping.getHashBuckets() > 0) {
        cto.addHashPartitions(keys, kuduMapping.getHashBuckets());
      }
      if (!kuduMapping.getRangePartitions().isEmpty()) {
        cto.setRangePartitionColumns(keys);
        for (Pair<String, String> range : kuduMapping.getRangePartitions()) {
          PartialRow lowerPar = sch.newPartialRow();
          PartialRow upperPar = sch.newPartialRow();
          for (String ky : keys) {
            if (!range.getKey().isEmpty()) {
              lowerPar.addString(ky, range.getKey());
            }
            if (!range.getValue().isEmpty()) {
              upperPar.addString(ky, range.getValue());
            }
          }
          cto.addRangePartition(lowerPar, upperPar);
        }
      }
      client.createTable(kuduMapping.getTableName(), sch, cto);
    } catch (KuduException ex) {
      throw new GoraException(ex);
    }
