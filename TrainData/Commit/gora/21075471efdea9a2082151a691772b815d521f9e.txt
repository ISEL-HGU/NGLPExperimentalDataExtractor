  private static final String COUCHDB = "couchdb";
  private static final String COUCHDB_MAPPING_FILE = "gora-couchdb-mapping.xml";
      }else if(dbName.equals(COUCHDB)) {
        result = new StreamResult(new File(DB_MAPPING_PATH"/"COUCHDB_MAPPING_FILE));
      }  
      //e.printStackTrace();DEFAULT_DATA_STORE_KEY
    case COUCHDB: {
      Element mappingClass = mappingDocument.createElement("class");
      rootNode.appendChild(mappingClass);

      // setting attribute to element
      Attr beanName = mappingDocument.createAttribute("name");
      beanName.setValue(fullNameSpace);
      mappingClass.setAttributeNode(beanName);

      // setting attribute to element
      Attr keyClass = mappingDocument.createAttribute("keyClass");
      keyClass.setValue(KEYCLASS);
      mappingClass.setAttributeNode(keyClass);

      // setting attribute to element
      Attr table = mappingDocument.createAttribute("table");
      table.setValue("users");
      mappingClass.setAttributeNode(table);
      while (keys.hasNext()) {
        String currentKey = keys.next();
        if (jsonObject.get(currentKey) instanceof JSONArray) {
          JSONArray mappingFields = jsonObject.getJSONArray(currentKey);
          for (int i = 0; i < mappingFields.length(); i) {
            JSONObject currentObj = mappingFields.getJSONObject(i);
            Element fields = mappingDocument.createElement("field");

            Attr name = mappingDocument.createAttribute("name");
            name.setValue(currentObj.getString("name"));
            fields.setAttributeNode(name);
            
            mappingClass.appendChild(fields);
          }
        }
      }
    }

      break;
      
      dataStore = MONGODB;
      dataStore = HBASE;
      break;
    case "org.apache.gora.couchdb.store.CouchDBStore":
      dataStore = COUCHDB;
