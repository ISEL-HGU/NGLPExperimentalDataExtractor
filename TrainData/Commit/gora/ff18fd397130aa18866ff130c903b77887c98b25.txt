import org.apache.hadoop.hbase.client.Admin;
import org.apache.hadoop.hbase.client.RowMutations;
  private final ConcurrentLinkedQueue<Mutation> buffer = new ConcurrentLinkedQueue<>();
  private final ThreadLocal<Table> table;
          throws IOException {
    this.table = new ThreadLocal<>();
    Table tableRef = table.get();
    if (tableRef == null) {
      tableRef = connection.getTable(tableName);
      tPool.add(tableRef); //keep track
      table.set(tableRef);
    return tableRef;
    while (!buffer.isEmpty()) {
      Mutation m = buffer.poll();
      bufMutator.mutate(m);

    if (!connection.isClosed()) {
      connection.close();
    }
   *

   *
  public void mutateRow(RowMutations m) throws IOException {
    getTable().mutateRow(m);
  }

    buffer.add(put);
    if (autoFlush) {
      flushCommits();
    }
    buffer.addAll(puts);
    if (autoFlush) {
      flushCommits();
    }
    buffer.add(delete);
    if (autoFlush) {
      flushCommits();
    }
    buffer.addAll(deletes);
    if (autoFlush) {
      flushCommits();
    }

  public Admin getAdmin() throws IOException {
    return connection.getAdmin();
  }
