import com.datastax.driver.core.KeyspaceMetadata;
import com.datastax.driver.core.TableMetadata;
          List<Element> partitionCompositeKeyFields = partitionKeys.getChildren("compositeKey");
          LOG.error("Unsupported Cassandra load balancing  policy: {} ", loadBalancingProp);
          LOG.error("Unsupported reconnection policy : {} ", reconnectionPolicy);
          LOG.error("Unsupported retry policy : {} ", retryPolicy);
    return mapping.getCoreName();
    LOG.debug("creating Cassandra keyspace {}", mapping.getKeySpace().getName());
    LOG.debug("creating Cassandra column family / table {}", mapping.getCoreName());
    LOG.debug("dropping Cassandra table {}", mapping.getCoreName());
    this.session.execute(CassandraQueryFactory.getDropTableQuery(mapping));
    LOG.debug("dropping Cassandra keyspace {}", mapping.getKeySpace().getName());
    this.session.execute(CassandraQueryFactory.getDropKeySpaceQuery(mapping));
    LOG.debug("truncating Cassandra table {}", mapping.getCoreName());
    this.session.execute(CassandraQueryFactory.getTruncateTableQuery(mapping));
    KeyspaceMetadata keyspace = cluster.getMetadata().getKeyspace(mapping.getKeySpace().getName());
    if (keyspace != null) {
      TableMetadata table = keyspace.getTable(mapping.getCoreName());
      return table != null;
    } else {
      return false;
    }
