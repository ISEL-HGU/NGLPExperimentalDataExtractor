import org.apache.avro.Schema;
import org.apache.avro.Schema.Field;
    Key recordKey = new Key(aerospikeParameters.getAerospikeMapping().getNamespace(), aerospikeParameters
      .getAerospikeMapping().getSet(), Value.get(key));

    List<Field> fields = value.getSchema().getFields();

    for (int i = 0; i < fields.size(); i) {

      // In retrieving the bin name, it is checked whether the server is single bin valued
      String binName = aerospikeParameters.getBinName(fields.get(i).name());
      Bin bin = getBin(binName, value.get(i), fields.get(i));
      aerospikeClient.put(aerospikeParameters.getAerospikeMapping().getWritePolicy(), recordKey, bin);
    }

  /**
   * Aerospike does not support Utf8 format returned from Avro.
   * This method provides those utf8 valued bin values as strings
   * for aerospike Value to obtain the corresponding bin value,
   * and returns the Bin
   *
   * @param binName name of the bin
   * @param value value of the bin
   * @param field field corresponding to bin
   * @return
   */
  private Bin getBin(String binName, Object value, Field field){
    
    boolean isStringType = false;
    if (field.schema().getType().equals(Schema.Type.STRING))
      isStringType = true;
    if (field.schema().getType().equals(Schema.Type.UNION)){
      for (Schema schema :field.schema().getTypes()) {
        if (schema.getName().equals("string"))
          isStringType = true;
      }
    }

    if (isStringType)
      return new Bin(binName, Value.get(value.toString()));
    else
      return new Bin(binName, Value.get(value));
  }
