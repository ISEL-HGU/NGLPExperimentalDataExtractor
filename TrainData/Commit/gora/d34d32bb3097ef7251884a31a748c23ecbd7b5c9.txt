import javax.cache.configuration.CompleteConfiguration;
import javax.cache.configuration.MutableConfiguration;
  private Cache<K, T> cache;
  private CachingProvider cachingProvider;
  private CompleteConfiguration<K, T> cacheConfig;
    String cachingProviderKey = properties.getProperty(GORA_DEFAULT_JCACHE_PROVIDER_KEY);
    if (cachingProviderKey != null) {
      cachingProvider = Caching.getCachingProvider(cachingProviderKey);
    } else {
      cachingProvider = Caching.getCachingProvider();


    manager = cachingProvider.getCacheManager();

      MutableConfiguration mutableCacheConfig = new MutableConfiguration<>();
      mutableCacheConfig.setTypes(keyClass, persistentClass);
        mutableCacheConfig.setReadThrough(Boolean.valueOf(properties.getProperty(JCACHE_READ_THROUGH_PROPERTY_KEY)));
        mutableCacheConfig.setReadThrough(true);
        mutableCacheConfig.setWriteThrough(Boolean.valueOf(properties.getProperty(JCACHE_WRITE_THROUGH_PROPERTY_KEY)));
        mutableCacheConfig.setWriteThrough(true);
        mutableCacheConfig.setStoreByValue(Boolean.valueOf(properties.getProperty(JCACHE_STORE_BY_VALUE_PROPERTY_KEY)));
        mutableCacheConfig.setStatisticsEnabled(Boolean.valueOf(properties.getProperty(JCACHE_STATISTICS_PROPERTY_KEY)));
        mutableCacheConfig.setStatisticsEnabled(Boolean.valueOf(properties.getProperty(JCACHE_MANAGEMENT_PROPERTY_KEY)));
          mutableCacheConfig.setExpiryPolicyFactory(FactoryBuilder.factoryOf(
          mutableCacheConfig.setExpiryPolicyFactory(FactoryBuilder.factoryOf(
          mutableCacheConfig.setExpiryPolicyFactory(FactoryBuilder.factoryOf(
          mutableCacheConfig.setExpiryPolicyFactory(FactoryBuilder.factoryOf(
      mutableCacheConfig.setCacheLoaderFactory(JCacheCacheFactoryBuilder
      mutableCacheConfig.setCacheWriterFactory(JCacheCacheFactoryBuilder
              mutableCacheConfig);
      cacheConfig = mutableCacheConfig;
              keyClass, persistentClass);
                cacheConfig);
    // JCache api does not expose sufficient enough information to exploit data locality.
    PartitionQueryImpl<K, T> partitionQuery = new PartitionQueryImpl<>(
            query);
    partitionQuery.setConf(this.getConf());
    partitions.add(partitionQuery);
    if (!cache.isClosed() && !manager.isClosed()) {
    //hazelcastInstance.shutdown();
  private void populateLocalCacheEntrySet(Cache<K, T> cache) {
    cacheConfig = cache.getConfiguration(CompleteConfiguration.class);
