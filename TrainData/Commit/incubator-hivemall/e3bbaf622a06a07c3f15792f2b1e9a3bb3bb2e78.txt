import hivemall.utils.lang.Preconditions;
import javax.annotation.Nonnull;

import org.apache.hadoop.hive.ql.exec.Description;
import org.apache.hadoop.hive.ql.metadata.HiveException;
import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;
import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory;
import org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector;
import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorFactory;

    public XGBoostPredictUDTF() {
        super();
    }
    protected StructObjectInspector getReturnOI() {
        final List<String> fieldNames = new ArrayList<>(2);
        final List<ObjectInspector> fieldOIs = new ArrayList<>(2);

    protected void forwardPredicted(@Nonnull final List<LabeledPointWithRowId> testData,
            @Nonnull final float[][] predicted) throws HiveException {
        Preconditions.checkArgument(predicted.length == testData.size(), HiveException.class);

        final Object[] forwardObj = new Object[2];
        for (int i = 0, size = testData.size(); i < size; i) {

            final String rowId = testData.get(i).getRowId();
            forwardObj[0] = rowId;
            forwardObj[1] = p;

            forward(forwardObj);
