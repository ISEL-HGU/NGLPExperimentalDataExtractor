import hivemall.utils.io.NIOUtils;
        // requiredRecordBytes, wordCounts length, wc1 length, wc1 string, wc2 length, wc2 string, ...
        int wcLengthTotal = 0;
            wcLengthTotal = wc.length();
        int requiredRecordBytes = SizeOf.INT * 2  SizeOf.INT * wordCounts.length  wcLengthTotal
                * SizeOf.CHAR;

        if (remain < requiredRecordBytes) {
        buf.putInt(requiredRecordBytes);
            NIOUtils.putString(wc, buf);
                            wordCounts[j] = NIOUtils.getString(buf);
                            int recordBytes = buf.getInt() - SizeOf.INT;
                                wordCounts[j] = NIOUtils.getString(buf);
    public void closeWithoutModelReset() throws HiveException {
        // launch close(), but not forward & clear model
        if (count == 0) {
            this.model = null;
            return;
        }
        if (miniBatchCount > 0) { // update for remaining samples
            model.train(Arrays.copyOfRange(miniBatch, 0, miniBatchCount));
        }
        if (iterations > 1) {
            runIterativeTraining(iterations);
        }
    }

    @VisibleForTesting
