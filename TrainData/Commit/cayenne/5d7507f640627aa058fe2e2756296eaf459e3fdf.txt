import org.apache.maven.plugins.annotations.LifecyclePhase;
import org.apache.maven.plugins.annotations.Mojo;
import org.apache.maven.plugins.annotations.Parameter;
@Mojo(name = "cdbimport", defaultPhase = LifecyclePhase.GENERATE_SOURCES)
    @Parameter(defaultValue = "org.apache.cayenne.dba.AutoAdapter")
     * Connection properties.
     * @see DbImportDataSourceConfig
    @Parameter(required = true)
    private DbImportDataSourceConfig dataSource = new DbImportDataSourceConfig();
    @Parameter(required = true)
    @Parameter(property = "dbimport", alias = "dbImport")
        config.setDefaultPackage(reverseEngineering.getDefaultPackage());
        config.setDriver(dataSource.getDriver());
        config.setForceDataMapCatalog(reverseEngineering.isForceDataMapCatalog());
        config.setForceDataMapSchema(reverseEngineering.isForceDataMapSchema());
        config.setMeaningfulPkTables(reverseEngineering.getMeaningfulPkTables());
        config.setNamingStrategy(reverseEngineering.getNamingStrategy());
        config.setPassword(dataSource.getPassword());
        config.setStripFromTableNames(reverseEngineering.getStripFromTableNames());
        config.setUrl(dataSource.getUrl());
        config.setUsername(dataSource.getUsername());
        config.setUsePrimitives(reverseEngineering.isUsePrimitives());
    /**
     * This setter is used by Maven
     */
    public void setDbimport(ReverseEngineering reverseEngineering) {
        this.reverseEngineering = reverseEngineering;
    /**
     * This setter is used by Maven
     */
    public void setDbImport(ReverseEngineering reverseEngineering) {
        this.reverseEngineering = reverseEngineering;

    // ⬇⬇⬇ All following setters should be removed in 4.0.BETA ⬇⬇⬇ //

    /**
     * Setter to catch old styled configuration
     * @deprecated to be removed in 4.0.BETA
     */
    @Deprecated
    public void setUrl(String url) {
        throw new UnsupportedOperationException("Connection properties were replaced with <dataSource> tag since 4.0.M5.\n\tFor additional information see http://cayenne.apache.org/docs/4.0/cayenne-guide/including-cayenne-in-project.html#maven-projects");
    }

    /**
     * Setter to catch old styled configuration
     * @deprecated to be removed in 4.0.BETA
     */
    @Deprecated
    public void setUser(String user) {
        throw new UnsupportedOperationException("Connection properties were replaced with <dataSource> tag since 4.0.M5.\n\tFor additional information see http://cayenne.apache.org/docs/4.0/cayenne-guide/including-cayenne-in-project.html#maven-projects");
    }

    /**
     * Setter to catch old styled configuration
     * @deprecated to be removed in 4.0.BETA
     */
    @Deprecated
    public void setPassword(String password) {
        throw new UnsupportedOperationException("Connection properties were replaced with <dataSource> tag since 4.0.M5.\n\tFor additional information see http://cayenne.apache.org/docs/4.0/cayenne-guide/including-cayenne-in-project.html#maven-projects");
    }

    /**
     * Setter to catch old styled configuration
     * @deprecated to be removed in 4.0.BETA
     */
    @Deprecated
    public void setDriver(String driver) {
        throw new UnsupportedOperationException("Connection properties were replaced with <dataSource> tag since 4.0.M5.\n\tFor additional information see http://cayenne.apache.org/docs/4.0/cayenne-guide/including-cayenne-in-project.html#maven-projects");
    }

    /**
     * Setter to catch old styled configuration
     * @deprecated to be removed in 4.0.BETA
     */
    @Deprecated
    public void setForceDataMapCatalog(boolean forceDataMapCatalog) {
        throw new UnsupportedOperationException("forceDataMapCatalog property has been moved to <dbimport> tag since 4.0.M5.\n\tFor additional information see http://cayenne.apache.org/docs/4.0/cayenne-guide/including-cayenne-in-project.html#maven-projects");
    }

    /**
     * Setter to catch old styled configuration
     * @deprecated to be removed in 4.0.BETA
     */
    @Deprecated
    public void setForceDataMapSchema(boolean forceDataMapSchema) {
        throw new UnsupportedOperationException("forceDataMapSchema property has been moved to <dbimport> tag since 4.0.M5.\n\tFor additional information see http://cayenne.apache.org/docs/4.0/cayenne-guide/including-cayenne-in-project.html#maven-projects");
    }

    /**
     * Setter to catch old styled configuration
     * @deprecated to be removed in 4.0.BETA
     */
    @Deprecated
    public void setMeaningfulPkTables(String meaningfulPkTables) {
        throw new UnsupportedOperationException("meaningfulPkTables property has been moved to <dbimport> tag since 4.0.M5.\n\tFor additional information see http://cayenne.apache.org/docs/4.0/cayenne-guide/including-cayenne-in-project.html#maven-projects");
    }

    /**
     * Setter to catch old styled configuration
     * @deprecated to be removed in 4.0.BETA
     */
    @Deprecated
    public void setNamingStrategy(String namingStrategy) {
        throw new UnsupportedOperationException("namingStrategy property has been moved to <dbimport> tag since 4.0.M5.\n\tFor additional information see http://cayenne.apache.org/docs/4.0/cayenne-guide/including-cayenne-in-project.html#maven-projects");
    }

    /**
     * Setter to catch old styled configuration
     * @deprecated to be removed in 4.0.BETA
     */
    @Deprecated
    public void setDefaultPackage(String defaultPackage) {
        throw new UnsupportedOperationException("defaultPackage property has been deprecated since 4.0.M5.\n\tFor additional information see http://cayenne.apache.org/docs/4.0/cayenne-guide/including-cayenne-in-project.html#maven-projects");
    }

    /**
     * Setter to catch old styled configuration
     * @deprecated to be removed in 4.0.BETA
     */
    @Deprecated
    public void setStripFromTableNames(String stripFromTableNames) {
        throw new UnsupportedOperationException("stripFromTableNames property has been deprecated since 4.0.M5.\n\tFor additional information see http://cayenne.apache.org/docs/4.0/cayenne-guide/including-cayenne-in-project.html#maven-projects");
    }

    /**
     * Setter to catch old styled configuration
     * @deprecated to be removed in 4.0.BETA
     */
    @Deprecated
    public void setUsePrimitives(boolean usePrimitives) {
        throw new UnsupportedOperationException("usePrimitives property has been deprecated since 4.0.M5.\n\tFor additional information see http://cayenne.apache.org/docs/4.0/cayenne-guide/including-cayenne-in-project.html#maven-projects");
    }

    /**
     * Setter to catch old styled configuration
     * @deprecated to be removed in 4.0.BETA
     */
    @Deprecated
    public void setReverseEngineering(ReverseEngineering reverseEngineering) {
        throw new UnsupportedOperationException("<reverseEngineering> tag has been replaced with <dbimport> since 4.0.M5.\n\tFor additional information see http://cayenne.apache.org/docs/4.0/cayenne-guide/including-cayenne-in-project.html#maven-projects");
    }
