    public void debug(String message) {
        delegate.debug(message);
        log("DEBUG", message, null, LogConsole.WARN_STYLE);
    public void debug(String message, Object object) {
        delegate.debug(message, object);
        log("DEBUG", message, null, LogConsole.WARN_STYLE, object);
    public void debug(String message, Object object, Object secondObject) {
        delegate.debug(message, object, secondObject);
        log("DEBUG", message, null, LogConsole.WARN_STYLE, object, secondObject);
    public void debug(String message, Object... objects) {
        delegate.debug(message, objects);
        log("DEBUG", message, null, LogConsole.WARN_STYLE, objects);
    public void debug(String message, Throwable throwable) {
        delegate.debug(message, throwable);
        log("DEBUG", message, throwable, LogConsole.WARN_STYLE);
    public void debug(Marker marker, String message) {
        delegate.debug(marker, message);
        log("DEBUG", message, null, LogConsole.WARN_STYLE);
    public void debug(Marker marker, String message, Object object) {
        delegate.debug(marker, message, object);
        log("DEBUG", message, null, LogConsole.WARN_STYLE, object);
    public void debug(Marker marker, String message, Object object, Object secondObject) {
        delegate.debug(marker, message, object, secondObject);
        log("DEBUG", message, null, LogConsole.WARN_STYLE, object, secondObject);
    public void debug(Marker marker, String message, Object... objects) {
        delegate.debug(marker, message, objects);
        log("DEBUG", message, null, LogConsole.WARN_STYLE, objects);
    public void debug(Marker marker, String message, Throwable throwable) {
        delegate.debug(marker, message, throwable);
        log("DEBUG", message, throwable, LogConsole.WARN_STYLE);
    public void error(String message) {
        delegate.error(message);
        log("ERROR", message, null, LogConsole.ERROR_STYLE);
    public void error(String message, Object object) {
        delegate.error(message, object);
        log("ERROR", message, null, LogConsole.ERROR_STYLE, object);
    public void error(String message, Object object, Object secondObject) {
        delegate.error(message, object, secondObject);
        log("ERROR", message, null, LogConsole.ERROR_STYLE, object, secondObject);
    public void error(String message, Object... objects) {
        delegate.error(message, objects);
        log("ERROR", message, null, LogConsole.ERROR_STYLE, objects);
    public void error(String message, Throwable throwable) {
        delegate.error(message, throwable);
        log("ERROR", message, throwable, LogConsole.ERROR_STYLE);
    public void error(Marker marker, String message) {
        delegate.error(marker, message);
        log("ERROR", message, null, LogConsole.ERROR_STYLE);
    public void error(Marker marker, String message, Object object) {
        delegate.error(marker, message , object);
        log("ERROR", message, null, LogConsole.ERROR_STYLE, object);
    public void error(Marker marker, String message, Object object, Object secondObject) {
        delegate.error(marker, message , object, secondObject);
        log("ERROR", message, null, LogConsole.ERROR_STYLE, object, secondObject);
    public void error(Marker marker, String message, Object... objects) {
        delegate.error(marker, message, objects);
        log("ERROR", message, null, LogConsole.ERROR_STYLE, objects);
    public void error(Marker marker, String message, Throwable throwable) {
        delegate.error(marker, message, throwable);
        log("ERROR", message, throwable, LogConsole.ERROR_STYLE);
    public void info(String message) {
        delegate.info(message);
        log("INFO", message, null, LogConsole.INFO_STYLE);
    public void info(String message, Object object) {
        delegate.info(message, object);
        log("INFO", message, null, LogConsole.INFO_STYLE, object);
    public void info(String message, Object object, Object secondObject) {
        delegate.info(message, object, secondObject);
        log("INFO", message, null, LogConsole.INFO_STYLE, object, secondObject);
    public void info(String message, Object... objects) {
        delegate.info(message, objects);
        log("INFO", message, null, LogConsole.INFO_STYLE, objects);
    public void info(String message, Throwable throwable) {
        delegate.info(message, throwable);
        log("INFO", message, throwable, LogConsole.INFO_STYLE);
    public void info(Marker marker, String message) {
        delegate.info(marker, message);
        log("INFO", message, null, LogConsole.INFO_STYLE);
    public void info(Marker marker, String message, Object object) {
        delegate.info(marker, message, object);
        log("INFO", message, null, LogConsole.INFO_STYLE, object);
    public void info(Marker marker, String message, Object object, Object secondObject) {
        delegate.info(marker, message, object, secondObject);
        log("INFO", message, null, LogConsole.INFO_STYLE, object, secondObject);
    public void info(Marker marker, String message, Object... objects) {
        delegate.info(marker, message, objects);
        log("INFO", message, null, LogConsole.INFO_STYLE, objects);
    public void info(Marker marker, String message, Throwable throwable) {
        delegate.info(marker, message, throwable);
        log("INFO", message, throwable, LogConsole.INFO_STYLE);
    public void trace(String message) {
        delegate.trace(message);
        log("TRACE", message, null, LogConsole.DEBUG_STYLE);
    public void trace(String message, Object object) {
        delegate.trace(message, object);
        log("TRACE", message, null, LogConsole.DEBUG_STYLE, object);
    public void trace(String message, Object object, Object secondObject) {
        delegate.trace(message, object, secondObject);
        log("TRACE", message, null, LogConsole.DEBUG_STYLE, object, secondObject);
    public void trace(String message, Object... objects) {
        delegate.trace(message, objects);
        log("TRACE", message, null, LogConsole.DEBUG_STYLE, objects);
    public void trace(String message, Throwable throwable) {
        delegate.trace(message, throwable);
        log("TRACE", message, throwable, LogConsole.DEBUG_STYLE);
    public void trace(Marker marker, String message) {
        delegate.trace(marker, message);
        log("TRACE", message, null, LogConsole.DEBUG_STYLE);
    public void trace(Marker marker, String message, Object object) {
        delegate.trace(marker, message, object);
        log("TRACE", message, null, LogConsole.DEBUG_STYLE, object);
    public void trace(Marker marker, String message, Object object, Object secondObject) {
        delegate.trace(marker, message, object, secondObject);
        log("TRACE", message, null, LogConsole.DEBUG_STYLE, object, secondObject);
    public void trace(Marker marker, String message, Object... objects) {
        delegate.trace(marker, message, objects);
        log("TRACE", message, null, LogConsole.DEBUG_STYLE, objects);
    public void trace(Marker marker, String message, Throwable throwable) {
        delegate.trace(marker, message, throwable);
        log("TRACE", message, throwable, LogConsole.DEBUG_STYLE);
    public void warn(String message) {
        delegate.warn(message);
        log("WARN", message, null, LogConsole.WARN_STYLE);
    public void warn(String message, Object object) {
        delegate.warn(message, object);
        log("WARN", message, null, LogConsole.WARN_STYLE, object);
    public void warn(String message, Object... objects) {
        delegate.warn(message, objects);
        log("WARN", message, null, LogConsole.WARN_STYLE, objects);
    public void warn(String message, Object object, Object secondObject) {
        delegate.warn(message, object, secondObject);
        log("WARN", message, null, LogConsole.WARN_STYLE, object, secondObject);
    public void warn(String message, Throwable throwable) {
        delegate.warn(message, throwable);
        log("WARN", message, throwable, LogConsole.WARN_STYLE);
    public void warn(Marker marker, String message) {
        delegate.warn(marker, message);
        log("WARN", message, null, LogConsole.WARN_STYLE);
    public void warn(Marker marker, String message, Object object) {
        delegate.warn(marker, message, object);
        log("WARN", message, null, LogConsole.WARN_STYLE, object);
    public void warn(Marker marker, String message, Object object, Object secondObject) {
        delegate.warn(marker, message, object, secondObject);
        log("WARN", message, null, LogConsole.WARN_STYLE, object, secondObject);
    public void warn(Marker marker, String message, Object... objects) {
        delegate.warn(marker, message, objects);
        log("WARN", message, null, LogConsole.WARN_STYLE, objects);
    public void warn(Marker marker, String message, Throwable throwable) {
        delegate.warn(marker, message, throwable);
        log("WARN", message, throwable, LogConsole.WARN_STYLE);
    private void log(String level, String message, Throwable throwable, AttributeSet style, Object... parameters) {
        getLogConsole().appendMessage(level, message, throwable, style);
    private void log(String level, Object message, Throwable throwable, AttributeSet style) {
        getLogConsole().appendMessage(level, String.valueOf(message), throwable, style);
