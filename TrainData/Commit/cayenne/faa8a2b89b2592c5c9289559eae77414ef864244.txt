import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.TableCellEditor;
import java.awt.Component;
    public MergerTokenSelectorController(final CayenneController parent) {
    public void setMergerTokenFactory(final MergerTokenFactory mergerTokenFactory) {
    public void setTokens(final List<MergerToken> tokens) {
        final List<MergerToken> t = new ArrayList<>(selectableTokensList);
    public void removeToken(final MergerToken token) {
        final AbstractTableModel model = (AbstractTableModel) view.getTokens().getModel();
    public void setToken(final MergerToken token) {
    public void setIncluded(final boolean b) {
        final int unselectedCount = excludedTokens.size() - permanentlyExcludedCount;
        final BindingBuilder builder = new BindingBuilder(
        final TableModel model = new MergerTokenTableModel(this);
        final MergeDirection[] dirs = new MergeDirection[] {
        final TableColumnModel columnModel = view.getTokens().getColumnModel();
        final JComboBox directionCombo = Application.getWidgetFactory().createComboBox(dirs, false);
        final TableColumn directionColumn = columnModel.getColumn(
            public Component getTableCellRendererComponent(final JTable table, final Object value,
                                                           final boolean isSelected, final boolean hasFocus, final int row, final int column) {
    public boolean isSelected(final MergerToken token) {
    public void select(final MergerToken token, final boolean select) {

    public void setDirection(final MergerToken token, final MergeDirection direction) {

        final int i = selectableTokensList.indexOf(token);
        final MergerToken reverse = token.createReverse(mergerTokenFactory);
        stopEditing();
        final boolean isCheckAllSelected = view.getCheckAll().isSelected();
        final AbstractTableModel model = (AbstractTableModel) view.getTokens().getModel();
        stopEditing();
            final MergerToken token = selectableTokensList.get(i);
            final MergerToken reverse = token.createReverse(mergerTokenFactory);
        final AbstractTableModel model = (AbstractTableModel) view.getTokens().getModel();

    private void stopEditing() {
        // Stop cell editing before any action
        final TableCellEditor cellEditor = view.getTokens().getCellEditor();

        if (cellEditor != null) {
            cellEditor.stopCellEditing();
        }
    }
