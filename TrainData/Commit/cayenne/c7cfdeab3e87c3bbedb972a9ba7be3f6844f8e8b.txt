import org.apache.cayenne.map.DbEntity;
import org.apache.cayenne.map.event.MapEvent;
import org.apache.cayenne.map.event.RelationshipEvent;
import org.apache.cayenne.modeler.Application;
import org.apache.cayenne.modeler.ProjectController;
public class RelationshipUndoableEdit extends CayenneUndoableEdit {
    private DbRelationship prevRelationship;
    private ProjectController projectController;

	public RelationshipUndoableEdit(DbRelationship relationship) {
		this.projectController = Application.getInstance().getFrameController().getProjectController();
		this.relationship = relationship;
		this.prevRelationship = copyRelationship(relationship);
	}

		fireDbRelationshipEvent(relationship, prevRelationship);
		fireDbRelationshipEvent(prevRelationship, relationship);
	}
	private void fireDbRelationshipEvent(DbRelationship relToFire, DbRelationship currRel) {
		DbEntity dbEntity = currRel.getSourceEntity();
		dbEntity.removeRelationship(currRel.getName());
		dbEntity.addRelationship(relToFire);
		projectController
				.fireDbRelationshipEvent(
						new RelationshipEvent(this, relToFire, relToFire.getSourceEntity(), MapEvent.ADD));
	private DbRelationship copyRelationship(DbRelationship dbRelationship) {
		DbRelationship rel = new DbRelationship();
		rel.setName(dbRelationship.getName());
		rel.setToDependentPK(dbRelationship.isToDependentPK());
		rel.setToMany(dbRelationship.isToMany());
		rel.setTargetEntityName(dbRelationship.getTargetEntityName());
		rel.setSourceEntity(dbRelationship.getSourceEntity());
		rel.setJoins(rel.getJoins());
		return rel;
