import org.apache.cayenne.access.types.BigIntegerValueType;
import org.apache.cayenne.access.types.DefaultValueObjectTypeRegistry;
import org.apache.cayenne.access.types.UUIDValueType;
import org.apache.cayenne.access.types.ValueObjectTypeRegistry;
        binder.bindMap(String.class, UnitDbAdapterProvider.TEST_ADAPTERS_MAP)
                .put(FirebirdAdapter.class.getName(), FirebirdUnitDbAdapter.class.getName())
                .put(OracleAdapter.class.getName(), OracleUnitDbAdapter.class.getName())
                .put(DerbyAdapter.class.getName(), DerbyUnitDbAdapter.class.getName())
                .put(Oracle8Adapter.class.getName(), OracleUnitDbAdapter.class.getName())
                .put(SybaseAdapter.class.getName(), SybaseUnitDbAdapter.class.getName())
                .put(MySQLAdapter.class.getName(), MySQLUnitDbAdapter.class.getName())
                .put(PostgresAdapter.class.getName(), PostgresUnitDbAdapter.class.getName())
                .put(OpenBaseAdapter.class.getName(), OpenBaseUnitDbAdapter.class.getName())
                .put(SQLServerAdapter.class.getName(), SQLServerUnitDbAdapter.class.getName())
                .put(DB2Adapter.class.getName(), DB2UnitDbAdapter.class.getName())
                .put(HSQLDBAdapter.class.getName(), HSQLDBUnitDbAdapter.class.getName())
                .put(H2Adapter.class.getName(), H2UnitDbAdapter.class.getName())
                .put(FrontBaseAdapter.class.getName(), FrontBaseUnitDbAdapter.class.getName())
                .put(IngresAdapter.class.getName(), IngresUnitDbAdapter.class.getName())
                .put(SQLiteAdapter.class.getName(), SQLiteUnitDbAdapter.class.getName());
                .add(new CalendarType<>(GregorianCalendar.class))
                .add(new CalendarType<>(Calendar.class));
        ServerModule.contributeValueObjectTypes(binder)
                .add(BigIntegerValueType.class)
                .add(UUIDValueType.class);
        binder.bind(ValueObjectTypeRegistry.class).to(DefaultValueObjectTypeRegistry.class);
        binder.bind(ObjectMapRetainStrategy.class).to(DefaultObjectMapRetainStrategy.class);
        binder.bind(UnitTestLifecycleManager.class).toInstance(new ServerCaseLifecycleManager(testScope));
        binder.bind(DataSourceInfo.class).toProvider(ServerCaseDataSourceInfoProvider.class);
        binder.bind(BatchTranslatorFactory.class).toProvider(ServerCaseBatchQueryBuilderFactoryProvider.class);
        binder.bind(DataChannelInterceptor.class).to(ServerCaseDataChannelInterceptor.class);
        binder.bind(SQLTemplateCustomizer.class).toProvider(SQLTemplateCustomizerProvider.class);
        binder.bind(ServerCaseDataSourceFactory.class).to(ServerCaseDataSourceFactory.class);
        binder.bind(EntityResolver.class).toProvider(ServerCaseEntityResolverProvider.class).in(testScope);
        binder.bind(DataNode.class).toProvider(ServerCaseDataNodeProvider.class).in(testScope);
        binder.bind(ServerCaseProperties.class).to(ServerCaseProperties.class).in(testScope);
        binder.bind(ServerRuntime.class).toProvider(ServerRuntimeProvider.class).in(testScope);
        binder.bind(ObjectContext.class).toProvider(ServerCaseObjectContextProvider.class).withoutScope();
        binder.bind(DataContext.class).toProvider(ServerCaseDataContextProvider.class).withoutScope();
        binder.bind(DBHelper.class).toProvider(FlavoredDBHelperProvider.class).in(testScope);
        binder.bind(DBCleaner.class).toProvider(DBCleanerProvider.class).in(testScope);
