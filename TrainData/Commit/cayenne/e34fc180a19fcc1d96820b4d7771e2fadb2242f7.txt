import static org.junit.Assert.assertEquals;
        if (getJavaMajorVersion(System.getProperty("java.version")) < 9) {
        } else {
            versions = new String[]{"4.3.1", "4.3"};

    @Test
    public void testVersion() {
        assertEquals(7, getJavaMajorVersion("1.7.0_25-b15"));
        assertEquals(7, getJavaMajorVersion("1.7.2123"));
        assertEquals(8, getJavaMajorVersion("1.8.145"));
        assertEquals(9, getJavaMajorVersion("9-ea19"));
        assertEquals(9, getJavaMajorVersion("9100"));
        assertEquals(9, getJavaMajorVersion("9"));
        assertEquals(9, getJavaMajorVersion("9.0.1"));
        assertEquals(10, getJavaMajorVersion("10-ea38"));
    }

    // will fail on Java 1.1 or earlier :)
    private static int getJavaMajorVersion(String versionString) {
        int index = 0, prevIndex = 0, version = 0;
        if((index = versionString.indexOf("-")) >= 0) {
            versionString = versionString.substring(0, index);
        }
        if((index = versionString.indexOf("")) >= 0) {
            versionString = versionString.substring(0, index);
        }

        while(version < 2) {
            index = versionString.indexOf(".", prevIndex);
            if(index == -1) {
                index = versionString.length();
            }
            version = Integer.parseInt(versionString.substring(prevIndex, index));
            prevIndex = index  1;
        }
        return version;
    }
