import javax.swing.JTree;
import javax.swing.event.TreeExpansionEvent;
import javax.swing.event.TreeExpansionListener;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;

        Collection<Catalog> catalogs = reverseEngineering.getCatalogs();
        Collection<? extends FilterContainer> filterContainers = !catalogs.isEmpty() ?
                catalogs :
                reverseEngineering.getSchemas();
        filterContainers.forEach(filterContainer -> {
            DbImportTreeNode container = findNodeInParent(root, filterContainer);
            if (container == null) {
            filterContainer.getIncludeTables().forEach(newTable -> {
                DbImportTreeNode table = findNodeInParent(container, newTable);
        for (int i = 0; i < parent.getChildCount(); i) {
            if(object instanceof Schema) {
                Schema schema = (Schema) object;
                if(!(userObject instanceof Schema)) {
                    continue;
                }

                Schema currentSchema = (Schema) userObject;
                if(currentSchema.getName().equals(schema.getName())) {
                    return node;
                }
            }

