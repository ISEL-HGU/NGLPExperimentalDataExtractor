    public void testUniqueKeyQualifier() {
    public void testUniqueKeyFetchLimit() {

    @Test
    public void testUniqueKeyHaving() {

        ObjectSelect<Artist> q1 = ObjectSelect.query(Artist.class)
                .localCache()
                .having(ExpressionFactory.expFalse());

        ObjectSelect<Artist> q2 = ObjectSelect.query(Artist.class)
                .localCache()
                .having(ExpressionFactory.expFalse());

        ObjectSelect<Artist> q3 = ObjectSelect.query(Artist.class)
                .localCache()
                .having(ExpressionFactory.expTrue());

        ObjectSelect<Artist> q4 = ObjectSelect.query(Artist.class)
                .localCache();

        assertNotNull(q1.getMetaData(resolver).getCacheKey());
        assertEquals(q1.getMetaData(resolver).getCacheKey(), q2.getMetaData(resolver).getCacheKey());

        assertNotEquals(q1.getMetaData(resolver).getCacheKey(), q3.getMetaData(resolver).getCacheKey());
        assertNotEquals(q1.getMetaData(resolver).getCacheKey(), q4.getMetaData(resolver).getCacheKey());
    }
