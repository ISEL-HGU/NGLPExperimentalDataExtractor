 * A portable global identifier for persistent objects. ObjectId can be temporary (used for transient or new
 * uncommitted objects) or permanent (used for objects that have been already stored in DB).
 * A temporary ObjectId stores object entity name and a pseudo-unique binary key; permanent id stores a map of values
 * from an external persistent store (aka "primary key").
    /**
     * Creates a temporary ObjectId for a given entity.
     *
     * @since 4.2
     */
    /**
     * Creates a temporary ObjectId for a given entity, using provided unique id key.
     *
     * @since 4.2
     */
    /**
     * Creates a single key/value permanent ObjectId.
     *
     * @since 4.2
     */
        if (value instanceof Number) {
            return new ObjectIdNumber(entityName, keyName, (Number) value);
    /**
     * Creates an ObjectId using another id as a template, but for a different entity. Useful inside the Cayenne stack
     * when resolving inheritance hierarchies.
     *
     * @since 4.2
     */
        if (objectId instanceof ObjectIdNumber) {
        if (objectId instanceof ObjectIdSingle) {
        if (objectId instanceof ObjectIdTmp) {
    /**
     * Creates an ObjectId, potentially mapped to multiple columns.
     *
     * @since 4.2
     */
        if (values.size() == 1) {
