	 *
	 * @param objects elements to sort
	 * @param orderings list of Orderings to be applied
	 * Orders a given list of objects, using a List of Orderings applied
	 * according the default iteration order of the Orderings list. I.e. each
	 * Ordering with lower index is more significant than any other Ordering
	 * with higher index.
	 *
	 * @param objects elements to sort
	 * @param orderings list of Orderings to be applied
	 * @return new List with ordered elements
	 *
	public static <E> List<E> orderedList(final Collection<E> objects, List<? extends Ordering> orderings) {
	 * Affects only in-memory sorting.
