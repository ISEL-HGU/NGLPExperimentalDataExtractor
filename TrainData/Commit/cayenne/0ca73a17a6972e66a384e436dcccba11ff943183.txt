import org.apache.cayenne.PersistenceState;
import org.apache.cayenne.unit.di.DataChannelInterceptor;
	@Inject
	protected DataChannelInterceptor queryInterceptor;

	private TableHelper tArtist;

		tArtist = new TableHelper(dbHelper, "ARTIST");
		tArtist.setColumns("ARTIST_ID", "ARTIST_NAME");

		tPainting.setColumns("PAINTING_ID", "ARTIST_ID", "PAINTING_TITLE", "ESTIMATED_PRICE");

	@Test
	public void testSQLTemplateWithDisjointByIdPrefetch() throws Exception {
		tArtist.insert(1, "artist1");
		tArtist.insert(2, "artist2");

		tPainting.insert(1, 1, "p1", 10);
		tPainting.insert(2, 2, "p2", 20);

		String sql = "SELECT p.* FROM PAINTING p";
		SQLTemplate q1 = new SQLTemplate(Painting.class, sql);
		q1.addPrefetch(Painting.TO_ARTIST.disjointById());
		q1.setColumnNamesCapitalization(CapsStrategy.UPPER);

		@SuppressWarnings("unchecked")
		List<Painting> paintings = context.performQuery(q1);

		queryInterceptor.runWithQueriesBlocked(() -> {
			for(Painting painting : paintings) {
				assertEquals(PersistenceState.COMMITTED, painting.getToArtist().getPersistenceState());
			}
		});
	}

	@Test(expected = CayenneRuntimeException.class)
	public void testSQLTemplateWithDisjointPrefetch() throws Exception {
		String sql = "SELECT p.* FROM PAINTING p";
		SQLTemplate q1 = new SQLTemplate(Painting.class, sql);
		q1.addPrefetch(Painting.TO_ARTIST.disjoint());
	}
