import java.util.Set;
                    requiredContents, sortPredicates, limit, user.getEffectiveUserGroups());
    /**
     * Returns the set of all group identifiers of which the given user is a
     * member, taking into account the given collection of known group
     * memberships which are not necessarily defined within the database.
     * 
     * Note that group visibility with respect to the queried user is NOT taken
     * into account. If the user is a member of a group, the identifier of that
     * group will be included in the returned set even if the current user lacks
     * "READ" permission for that group.
     *
     * @param user
     *     The user whose effective groups should be returned.
     *
     * @param effectiveGroups
     *     The identifiers of any known effective groups that should be taken
     *     into account, such as those defined externally to the database.
     *
     * @return
     *     The set of identifiers of all groups that the given user is a
     *     member of, including those where membership is inherited through
     *     membership in other groups.
     */
    public Set<String> retrieveEffectiveGroups(ModeledUser user,
            Collection<String> effectiveGroups) {
        return userMapper.selectEffectiveGroupIdentifiers(user.getModel(), effectiveGroups);
    }
