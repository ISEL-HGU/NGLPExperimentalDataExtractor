import org.apache.guacamole.net.auth.AuthenticatedUser;
     * @param authenticatedUser
     *      The AuthenticatedUser associated with the user for whom the tunnel
     *      is being created.
    private void fireTunnelConnectEvent(AuthenticatedUser authenticatedUser,
        listenerService.handleEvent(new TunnelConnectEvent(authenticatedUser,
                credentials, tunnel));
     * @param authenticatedUser
     *      The AuthenticatedUser associated with the user for whom the tunnel
     *      is being closed.
    private void fireTunnelClosedEvent(AuthenticatedUser authenticatedUser,
        listenerService.handleEvent(new TunnelCloseEvent(authenticatedUser,
                credentials, tunnel));
                // Notify listeners to allow close request to be vetoed
                AuthenticatedUser authenticatedUser = session.getAuthenticatedUser();
                fireTunnelClosedEvent(authenticatedUser,
                    authenticatedUser.getCredentials(), tunnel);
            fireTunnelConnectEvent(session.getAuthenticatedUser(),
