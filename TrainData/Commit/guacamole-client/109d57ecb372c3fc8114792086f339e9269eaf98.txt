import org.apache.guacamole.net.event.listener.Listener;
     * All currently-bound authentication providers, if any.
     */
    private final List<ListenerProvider> boundListenerProviders =
            new ArrayList<ListenerProvider>();

    /**
     * Binds the given Listener class such that any service
     * requiring access to the Listener can obtain it via
     * injection, along with any other bound Listener.
     *
     * @param listenerClass
     *     The Listener class to bind.
     */
    private void bindListenerProvider(Class<? extends Listener> listenerClass) {

        // Bind listener
        logger.debug("[{}] Binding Listener \"{}\".",
                boundListenerProviders.size(), listenerClass.getName());
        boundListenerProviders.add(new ListenerFacade(listenerClass));
    }

    /**
     * Binds each of the the given Listener classes such that any
     * service requiring access to the Listener can obtain it via
     * injection.
     *
     * @param listeners
     *     The Listener classes to bind.
     */
    private void bindListenerProviders(Collection<Class<Listener>> listeners) {

        // Bind each listener within extension
        for (Class<Listener> listener : listeners)
            bindListenerProvider(listener);
    }

    /**
     * Returns a list of all currently-bound ListenerProvider instances.
     *
     * @return
     *     A List of all currently-bound ListenerProvider instances. The List is
     *     not modifiable.
     */
    @Provides
    public List<ListenerProvider> getListenerProviders() {
        return Collections.unmodifiableList(boundListenerProviders);
    }

    /**
                // Attempt to load all listeners
                bindListenerProviders(extension.getListenerClasses());

