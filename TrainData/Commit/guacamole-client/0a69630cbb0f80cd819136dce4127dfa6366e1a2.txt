        return systemPermissionService.getPermissionSet(getCurrentUser(), this, false);
        return connectionPermissionService.getPermissionSet(getCurrentUser(), this, false);
        return connectionGroupPermissionService.getPermissionSet(getCurrentUser(), this, false);
        return sharingProfilePermissionService.getPermissionSet(getCurrentUser(), this, false);
        return activeConnectionPermissionService.getPermissionSet(getCurrentUser(), this, false);
        return userPermissionService.getPermissionSet(getCurrentUser(), this, false);
        return new Permissions() {

            @Override
            public ObjectPermissionSet getActiveConnectionPermissions()
                    throws GuacamoleException {
                return activeConnectionPermissionService.getPermissionSet(getCurrentUser(), ModeledUser.this, true);
            }

            @Override
            public ObjectPermissionSet getConnectionGroupPermissions()
                    throws GuacamoleException {
                return connectionGroupPermissionService.getPermissionSet(getCurrentUser(), ModeledUser.this, true);
            }

            @Override
            public ObjectPermissionSet getConnectionPermissions()
                    throws GuacamoleException {
                return connectionPermissionService.getPermissionSet(getCurrentUser(), ModeledUser.this, true);
            }

            @Override
            public ObjectPermissionSet getSharingProfilePermissions()
                    throws GuacamoleException {
                return sharingProfilePermissionService.getPermissionSet(getCurrentUser(), ModeledUser.this, true);
            }

            @Override
            public SystemPermissionSet getSystemPermissions()
                    throws GuacamoleException {
                return systemPermissionService.getPermissionSet(getCurrentUser(), ModeledUser.this, true);
            }

            @Override
            public ObjectPermissionSet getUserPermissions()
                    throws GuacamoleException {
                return userPermissionService.getPermissionSet(getCurrentUser(), ModeledUser.this, true);
            }

            @Override
            public ObjectPermissionSet getUserGroupPermissions()
                    throws GuacamoleException {
                // FIXME: STUB
                return new SimpleObjectPermissionSet();
            }

        };
