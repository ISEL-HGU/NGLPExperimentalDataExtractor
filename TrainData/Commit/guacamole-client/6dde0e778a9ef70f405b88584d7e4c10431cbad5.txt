        // Always allow but provide no data for users authenticated via our own
        // connection sharing links
        if (authenticatedUser instanceof SharedAuthenticatedUser)
            return null;

        // Set semantic flags based on context
        boolean databaseCredentialsUsed = (authenticatedUser instanceof ModeledAuthenticatedUser);
        boolean databaseRestrictionsApplicable = (databaseCredentialsUsed || environment.isUserRequired());

            // Enforce applicable account restrictions
            if (databaseRestrictionsApplicable) {
            // Update password if password is expired AND the password was
            // actually involved in the authentication process
            if (databaseCredentialsUsed) {
                if (user.isExpired() || passwordPolicyService.isPasswordExpired(user))
                    userService.resetExpiredPassword(user, authenticatedUser.getCredentials());
            }

            // Return all data associated with the authenticated user
        // Veto authentication result only if database-specific account
        // restrictions apply in this situation
        if (databaseRestrictionsApplicable)
            throw new GuacamoleInvalidCredentialsException("Invalid login",
                    CredentialsInfo.USERNAME_PASSWORD);
        // There is no data to be returned for the user, either because they do
        // not exist or because restrictions prevent their data from being
        // retrieved, but no restrictions apply which should prevent the user
        // from authenticating entirely
        return null;
