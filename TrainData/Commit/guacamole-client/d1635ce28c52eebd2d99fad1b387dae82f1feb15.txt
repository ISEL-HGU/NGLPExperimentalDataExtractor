import com.novell.ldap.LDAPSearchConstraints;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
     * Logger for this class.
     */
    private final Logger logger = LoggerFactory.getLogger(ConfigurationService.class);

    /**
    /**
     * Returns a set of LDAPSearchConstraints to apply globally
     * to all LDAP searches rather than having various instances
     * dispersed throughout the code.  Currently contains the
     * maximum number of LDAP results to return in a search, as
     * well as whether or not aliases should be dereferenced
     * during LDAP operations.
     *
     * @return
     *     A LDAPSearchConstraints object containing constraints
     *     to be applied to all LDAP search operations.
     *
     * @throws GuacamoleException
     *     If guacamole.properties cannot be parsed.
     */
    public LDAPSearchConstraints getLDAPSearchConstraints() throws GuacamoleException {

        LDAPSearchConstraints constraints = new LDAPSearchConstraints();

        constraints.setMaxResults(getMaxResults());
        constraints.setDereference(getDereferenceAliases());

        return constraints;

    }

