import org.apache.guacamole.net.auth.Credentials;
import org.apache.guacamole.net.event.TunnelCloseEvent;
import org.apache.guacamole.net.event.TunnelConnectEvent;
import org.apache.guacamole.rest.event.ListenerService;
     * A service for notifying listeners about tunnel connect/closed events.
     */
    @Inject
    private ListenerService listenerService;

    /**
     * Notifies bound listeners that a new tunnel has been connected.
     * Listeners may veto a connected tunnel by throwing any GuacamoleException.
     *
     * @param userContext
     *      The UserContext associated with the user for whom the tunnel is
     *      being created.
     *
     * @param credentials
     *      Credentials that authenticate the user.
     *
     * @param tunnel
     *      The tunnel that was connected.
     *
     * @throws GuacamoleException
     *     If thrown by a listener or if any listener vetoes the connected tunnel.
     */
    private void fireTunnelConnectEvent(UserContext userContext,
            Credentials credentials, GuacamoleTunnel tunnel) throws GuacamoleException {
        listenerService.handleEvent(new TunnelConnectEvent(userContext, credentials, tunnel));
    }

    /**
     * Notifies bound listeners that a tunnel is to be closed.
     * Listeners are allowed to veto a request to close a tunnel by throwing any
     * GuacamoleException.
     *
     * @param userContext
     *      The UserContext associated with the user for whom the tunnel is
     *      being created.
     *
     * @param credentials
     *      Credentials that authenticate the user.
     *
     * @param tunnel
     *      The tunnel that was connected.
     *
     * @throws GuacamoleException
     *     If thrown by a listener.
     */
    private void fireTunnelClosedEvent(UserContext userContext,
            Credentials credentials, GuacamoleTunnel tunnel)
            throws GuacamoleException {
        listenerService.handleEvent(new TunnelCloseEvent(userContext, credentials, tunnel));
    }

    /**
    protected GuacamoleTunnel createAssociatedTunnel(final GuacamoleTunnel tunnel,
                // notify listeners to allow close request to be vetoed
                fireTunnelClosedEvent(context,
                    session.getAuthenticatedUser().getCredentials(), tunnel);

            // Notify listeners to allow connection to be vetoed
            fireTunnelConnectEvent(userContext,
                    session.getAuthenticatedUser().getCredentials(), tunnel);

