            LOG.info("The cluster has a new leader: {}", newLeader);
            try {
                handler.onKubernetesClusterEvent(new KubernetesClusterEvent.KubernetesClusterLeaderChangedEvent() {
                    @Override
                    public Optional<String> getData() {
                        return newLeader;
                    }
                });
            } catch (Throwable t) {
                LOG.warn("Error while communicating the new leader to the handler", t);
            }
            LOG.info("The list of cluster members has changed: {}", newMembers);
            try {
                handler.onKubernetesClusterEvent(new KubernetesClusterEvent.KubernetesClusterMemberListChangedEvent() {
                    @Override
                    public Set<String> getData() {
                        return newMembers;
                    }
                });
            } catch (Throwable t) {
                LOG.warn("Error while communicating the cluster members to the handler", t);
            }
