import com.amazonaws.xray.AWSXRayRecorder;
import com.amazonaws.xray.entities.Entity;
    // Note that the Entity itself is not serializable, so don't share this object among different VMs!
    public static final String XRAY_TRACE_ENTITY = "Camel-AWS-XRay-Trace-Entity";
            // copy over any available trace entity (i.e. Segment) from the old thread to the new one
            // according to AWS XRay documentation on multithreading:

            // https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-java-multithreading.html
            //
            // > If you use multiple threads to handle incoming requests, you can pass the current segment or subsegment
            // > to the new thread and provide it to the global recorder. This ensures that the information recorded
            // > within the new thread is associated with the same segment as the rest of the information recorded about
            // > that request.
            Entity entity = null;
            if (exchange.getIn().getHeaders().containsKey(XRAY_TRACE_ENTITY)) {
                entity = exchange.getIn().getHeader(XRAY_TRACE_ENTITY, Entity.class);
            }

            if (null != entity) {
                AWSXRayRecorder recorder = AWSXRay.getGlobalRecorder();
                recorder.setTraceEntity(entity);
            }

