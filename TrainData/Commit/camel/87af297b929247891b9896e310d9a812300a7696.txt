/**
 * A basic reactive engine that uses a worker pool to process tasks.
 */
    /**
     * @deprecated not in use
     */
    @Deprecated
        private volatile LinkedList<Runnable> queue = new LinkedList<>();
        private volatile LinkedList<LinkedList<Runnable>> back;
        private volatile boolean running;
                            LOG.warn("Error executing reactive work due to "  t.getMessage()  ". This exception is ignored.", t);
                // should not happen
                LOG.warn("Error executing reactive work due to "  t.getMessage()  ". This exception is ignored.", t);
