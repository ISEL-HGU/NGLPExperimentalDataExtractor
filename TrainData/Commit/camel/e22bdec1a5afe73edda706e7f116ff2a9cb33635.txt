import org.apache.http.impl.auth.BasicScheme;
import org.apache.http.protocol.HttpContext;
    private HttpContext httpContext;
    
        
        this.httpContext = endpoint.getHttpContext();
        
    }
    
    @Override
    public HttpEndpoint getEndpoint() {
        return (HttpEndpoint) super.getEndpoint();
            HttpResponse response = executeMethod(method, httpClientContext);
    
    /**
     * Strategy when executing the method (calling the remote server).
     *
     * @param httpRequest the http Request to execute
     * @return the response
     * @throws IOException can be thrown
     */
    protected HttpResponse executeMethod(HttpRequestBase httpRequest, HttpClientContext httpClientContext) throws IOException {
       
        if (getEndpoint().isAuthenticationPreemptive()) {
            BasicScheme basicAuth = new BasicScheme();
            httpClientContext.setAttribute("preemptive-auth", basicAuth);
        }
        if (httpContext != null) {
            httpClientContext = new HttpClientContext(httpContext);
        }
        return httpClient.execute(httpRequest, httpClientContext);
    }
