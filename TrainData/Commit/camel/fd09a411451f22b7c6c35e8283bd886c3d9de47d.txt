import java.util.Set;
    private final boolean requiredBody;
    private final Set<String> requiredQueryParameters;
    private final Set<String> requiredHeaders;
                             Map<String, String> queryDefaultValues,
                             boolean requiredBody, Set<String> requiredQueryParameters, Set<String> requiredHeaders) throws Exception {
        this.requiredBody = requiredBody;
        this.requiredQueryParameters = requiredQueryParameters;
        this.requiredHeaders = requiredHeaders;
        // check for required
        if (clientRequestValidation) {
            if (requiredBody) {
                // the body is required so we need to know if we have a body or not
                // so force reading the body as a String which we can work with
                if (body == null) {
                    body = MessageHelper.extractBodyAsString(exchange.getIn());
                    if (body != null) {
                        exchange.getIn().setBody(body);
                    }
                }
                if (body == null) {
                    // this is a bad request, the client did not include a message body
                    exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE, 400);
                    // stop routing and return
                    exchange.setProperty(Exchange.ROUTE_STOP, true);
                    return;
                }
            }
            if (requiredQueryParameters != null && !exchange.getIn().getHeaders().keySet().containsAll(requiredQueryParameters)) {
                // this is a bad request, the client did not include some of the required query parameters
                exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE, 400);
                // stop routing and return
                exchange.setProperty(Exchange.ROUTE_STOP, true);
                return;
            }
            if (requiredHeaders != null && !exchange.getIn().getHeaders().keySet().containsAll(requiredHeaders)) {
                // this is a bad request, the client did not include some of the required http headers
                exchange.getOut().setHeader(Exchange.HTTP_RESPONSE_CODE, 400);
                // stop routing and return
                exchange.setProperty(Exchange.ROUTE_STOP, true);
                return;
            }
        }

