import java.util.List;
import java.util.stream.Collectors;

import org.apache.camel.component.xchange.XChangeConfiguration.XChangeService;
import org.apache.camel.impl.DefaultEndpoint;
import org.knowm.xchange.currency.Currency;
import org.knowm.xchange.currency.CurrencyPair;
import org.knowm.xchange.dto.meta.CurrencyMetaData;
import org.knowm.xchange.dto.meta.CurrencyPairMetaData;
import org.knowm.xchange.dto.meta.ExchangeMetaData;
import org.knowm.xchange.utils.Assert;
@UriEndpoint(firstVersion = "2.21.0", scheme = "xchange", title = "XChange", syntax = "xchange:name", producerOnly = true, label = "blockchain")
public class XChangeEndpoint extends DefaultEndpoint {
        throw new UnsupportedOperationException();
        
        Producer producer = null;
        
        XChangeService service = getConfiguration().getService();
        if (XChangeService.metadata == service) {
            producer = new XChangeMetaDataProducer(this);
        } else if (XChangeService.marketdata == service) {
            producer = new XChangeMarketDataProducer(this);
        }
        
        Assert.notNull(producer, "Unsupported service: "  service);
        return producer;
    
    public List<Currency> getCurrencies() {
        ExchangeMetaData metaData = exchange.getExchangeMetaData();
        return metaData.getCurrencies().keySet().stream().sorted().collect(Collectors.toList());
    }
    
    public CurrencyMetaData getCurrencyMetaData(Currency curr) {
        Assert.notNull(curr, "Null currency");
        ExchangeMetaData metaData = exchange.getExchangeMetaData();
        return metaData.getCurrencies().get(curr);
    }
    
    public List<CurrencyPair> getCurrencyPairs() {
        ExchangeMetaData metaData = exchange.getExchangeMetaData();
        return metaData.getCurrencyPairs().keySet().stream().sorted().collect(Collectors.toList());
    }
    
    public CurrencyPairMetaData getCurrencyPairMetaData(CurrencyPair pair) {
        Assert.notNull(pair, "Null currency");
        ExchangeMetaData metaData = exchange.getExchangeMetaData();
        return metaData.getCurrencyPairs().get(pair);
    }
