            String baseVersion = null;
                        if (groupId.equals(artifact.getGroupId()) && artifactId.equals(artifact.getArtifactId())) {
                            baseVersion = artifact.getVersion();

                                    // updating to use correct base version in camel-connector.json
                                    updateBaseVersionInCamelConnectorJSon(baseVersion);

    private void updateBaseVersionInCamelConnectorJSon(String baseVersion) throws MojoExecutionException {
        File file = new File(classesDirectory, "camel-connector.json");
        if (file.exists()) {
            try {
                ObjectMapper mapper = new ObjectMapper();
                Map dto = mapper.readValue(file, Map.class);

                // find the component dependency and get its .json file
                file = new File(classesDirectory, "camel-connector.json");
                if (baseVersion != null) {
                    String existingBaseVersion = (String) dto.get("baseVersion");
                    if (existingBaseVersion == null || !existingBaseVersion.equals(baseVersion)) {
                        dto.put("baseVersion", baseVersion);
                        // update file
                        mapper.writerWithDefaultPrettyPrinter().writeValue(file, dto);
                        // project root folder
                        File root = classesDirectory.getParentFile().getParentFile();
                        // update source file also
                        file = new File(root, "src/main/resources/camel-connector.json");
                        if (file.exists()) {
                            getLog().info("Updating baseVersion to "  baseVersion  " in "  file);
                            mapper.writerWithDefaultPrettyPrinter().writeValue(file, dto);
                        }
                    }
                }
            } catch (Exception e) {
                throw new MojoExecutionException("Error in camel-connector-maven-plugin", e);
            }
        }
    }

