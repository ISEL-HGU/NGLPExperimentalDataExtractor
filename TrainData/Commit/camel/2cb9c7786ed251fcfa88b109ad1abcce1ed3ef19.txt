import java.security.PrivateKey;
import java.security.cert.Certificate;
import org.apache.camel.component.as2.api.AS2CompressionAlgorithm;
import org.apache.camel.component.as2.api.AS2EncryptionAlgorithm;
import org.apache.camel.component.as2.api.AS2MessageStructure;
import org.apache.camel.component.as2.api.AS2SignatureAlgorithm;
import org.apache.http.entity.ContentType;
    
    public String getRequestUri() {
        return configuration.getRequestUri();
    }

     public void setRequestUri(String requestUri) {
        configuration.setRequestUri(requestUri);
    }

    public String getSubject() {
        return configuration.getSubject();
    }

    public void setSubject(String subject) {
        configuration.setSubject(subject);
    }

    public String getFrom() {
        return configuration.getFrom();
    }

    public void setFrom(String from) {
        configuration.setFrom(from);
    }

    public String getAs2From() {
        return configuration.getAs2From();
    }

    public void setAs2From(String as2From) {
        configuration.setAs2From(as2From);
    }

    public String getAs2To() {
        return configuration.getAs2To();
    }

    public void setAs2To(String as2To) {
        configuration.setAs2To(as2To);
    }
    
    public AS2MessageStructure getAs2MessageStructure() {
        return configuration.getAs2MessageStructure();
    }

    public void setAs2MessageStructure(AS2MessageStructure as2MessageStructure) {
        configuration.setAs2MessageStructure(as2MessageStructure);
    }
    
    public ContentType getEdiMessageType() {
        return configuration.getEdiMessageType();
    }

    public void setEdiMessageContentType(ContentType ediMessageType) {
        configuration.setEdiMessageType(ediMessageType);
    }
    
    public String getEdiMessageTransferEncoding() {
        return configuration.getEdiMessageTransferEncoding();
    }

    public void setEdiMessageTransferEncoding(String ediMessageTransferEncoding) {
        configuration.setEdiMessageTransferEncoding(ediMessageTransferEncoding);
    }
    
    public AS2SignatureAlgorithm getSigningAlgorithm() {
        return configuration.getSigningAlgorithm();
    }
    
    public void setSigningAlgorithm(AS2SignatureAlgorithm signingAlgorithm) {
        configuration.setSigningAlgorithm(signingAlgorithm);
    }
    
    public Certificate[] getSigningCertificateChain() {
        return configuration.getSigningCertificateChain();
    }
    
    public void setSigningCertificateChain(Certificate[] signingCertificateChain) {
        configuration.setSigningCertificateChain(signingCertificateChain);
    }

    public PrivateKey getSigningPrivateKey() {
        return configuration.getSigningPrivateKey();
    }

    public void setSigningPrivateKey(PrivateKey signingPrivateKey) {
        configuration.setSigningPrivateKey(signingPrivateKey);
    }

    public AS2CompressionAlgorithm getCompressionAlgorithm() {
        return configuration.getCompressionAlgorithm();
    }

    public void setCompressionAlgorithm(AS2CompressionAlgorithm compressionAlgorithm) {
        configuration.setCompressionAlgorithm(compressionAlgorithm);
    }

    public String getDispositionNotificationTo() {
        return configuration.getDispositionNotificationTo();
    }

    public void setDispositionNotificationTo(String dispositionNotificationTo) {
        configuration.setDispositionNotificationTo(dispositionNotificationTo);
    }
    
    public String[] getSignedReceiptMicAlgorithms() {
        return configuration.getSignedReceiptMicAlgorithms();
    }
    
    public void setSignedReceiptMicAlgorithms(String[] signedReceiptMicAlgorithms) {
        configuration.setSignedReceiptMicAlgorithms(signedReceiptMicAlgorithms);
    }
    
    public AS2EncryptionAlgorithm getEncryptingAlgorithm() {
        return configuration.getEncryptingAlgorithm();
    }
    
    public void setEncryptingAlgorithm(AS2EncryptionAlgorithm encryptingAlgorithm) {
        configuration.setEncryptingAlgorithm(encryptingAlgorithm);
    }
    
    public Certificate[] getEncryptingCertificateChain() {
        return configuration.getEncryptingCertificateChain();
    }
    
    public void setEncryptingCertificateChain(Certificate[] encryptingCertificateChain) {
        configuration.setEncryptingCertificateChain(encryptingCertificateChain);
    }

