import org.apache.camel.StreamCache;
        StreamCache cache = null;

        // if the content is an input stream then its likely not re-readable so we need to make it stream cached
        Object content = getContentToValidate(exchange);
        if (!(content instanceof StreamCache) && content instanceof InputStream) {
            cache = exchange.getContext().getTypeConverter().convertTo(StreamCache.class, exchange, content);
            if (cache != null) {
                if (shouldUseHeader()) {
                    exchange.getIn().setHeader(headerName, cache);
                } else {
                    exchange.getIn().setBody(cache);
                }
            }
        }
                if (content == null && isFailOnNullHeader()) {
                if (content == null && isFailOnNullBody()) {
            if (content != null) {
                // favour using stream caching
                if (cache == null) {
                    cache = exchange.getContext().getTypeConverter().convertTo(StreamCache.class, exchange, content);
                }
                InputStream is = exchange.getContext().getTypeConverter().mandatoryConvertTo(InputStream.class, exchange, cache != null ? cache : content);
                if (node == null) {
                    throw new NoJsonBodyValidationException(exchange);
                }
            if (cache != null) {
                cache.reset();
            }
    private Object getContentToValidate(Exchange exchange) {
            return exchange.getIn().getHeader(headerName);
            return exchange.getIn().getBody();
