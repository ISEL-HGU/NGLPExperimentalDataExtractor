    @UriParam(label = "consumer")
    private boolean fileWatcher;
        if (isFileWatcher() && !"file".equals(getKind())) {
            throw new IllegalArgumentException("File watcher is only possible if reading streams from files");
        }
     * Will retry opening the stream if it's overwritten, somewhat like tail --retry
     * <p/>
     * If reading from files then you should also enable the fileWatcher option, to make it work reliable.

    public boolean isFileWatcher() {
        return fileWatcher;
    }

    /**
     * To use JVM file watcher to listen for file change events to support re-loading files that may be overwritten, somewhat like tail --retry
     */
    public void setFileWatcher(boolean fileWatcher) {
        this.fileWatcher = fileWatcher;
    }

