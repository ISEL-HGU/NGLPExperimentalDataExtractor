import com.pubnub.api.models.consumer.PNErrorData;
        try {
            switch (operation) {
            case PUBLISH: {
                doPublish(exchange, callback);
                break;
            case FIRE: {
                doFire(exchange, callback);
                break;
            }
            case GETHISTORY: {
                doGetHistory(exchange, callback);
                break;
            }
            case GETSTATE: {
                doGetState(exchange, callback);
                break;
            }
            case HERENOW: {
                doHereNow(exchange, callback);
                break;
            }
            case SETSTATE: {
                doSetState(exchange, callback);
                break;
            }
            case WHERENOW: {
                doWhereNow(exchange, callback);
                break;
            }
            default:
                throw new UnsupportedOperationException(operation.toString());
            }
        } catch (Exception e) {
            exchange.setException(e);
            throw new RuntimeException("Can not publish empty message");
            PNErrorData errorData = status.getErrorData();
            exchange.setException(errorData.getThrowable());
            if (errorData != null && errorData.getThrowable() instanceof PubNubException) {
                PubNubException pubNubException = (PubNubException) errorData.getThrowable();
                throw new RuntimeException(pubNubException.getPubnubError().getMessage(), errorData.getThrowable());
            }
            throw new RuntimeException(status.getErrorData().getThrowable());
