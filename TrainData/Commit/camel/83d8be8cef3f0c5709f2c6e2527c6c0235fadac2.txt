                return setProperty(camelContext, target, name, value, false, true, true, true, true, true);
                return setProperty(camelContext, target, name, value, false, nesting, deepNesting, fluentBuilder, reference, placeholder);
                boolean bound = setProperty(camelContext, target, name, value, true, true, true, true, true, true);
    private static boolean setProperty(CamelContext context, Object target, String name, Object value, boolean mandatory,
        String ognlPath = name;

                        } else {
                            if (mandatory) {
                                // there is no getter with this given name, so lets report this as a problem
                                throw new IllegalArgumentException("Cannot find nested getter method: "  part  " on bean: "  newClass  " when binding property: "  ognlPath);
                            }
        boolean hit = IntrospectionSupport.setProperty(context, context.getTypeConverter(), target, name, value, refName, fluentBuilder);
        if (!hit && mandatory) {
            // there is no setter with this given name, so lets report this as a problem
            throw new IllegalArgumentException("Cannot find setter method: "  name  " on bean: "  target  " when binding property: "  ognlPath);
        }
        return hit;
