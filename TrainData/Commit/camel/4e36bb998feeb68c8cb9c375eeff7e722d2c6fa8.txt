        boolean inProgress = false;

        //parsing assumes matching close and end quotes
            boolean canStart = false;
            boolean canClose = false;
            boolean cutStart = false;
            boolean cutEnd = false;
                //token is just a quote
                if (s.length() == 1) {
                    s = "";
                    //if token is a quote then it can only close processing if it has begun
                    if (inProgress) {
                        canClose = true;
                    } else {
                        canStart = true;
                    }
                } else {
                    //quote"not empty"
                    cutStart = true;
                    canStart = true;
            }

            //"not empty"quote
            if (s.endsWith(quote)) {
                cutEnd = true;
                canClose = true;
            }

            //optimize to only substring once
            if (cutEnd || cutStart) {
                s = s.substring(cutStart ? 1 : 0, cutEnd ? s.length() - 1 : s.length());
            if (inProgress) {
                current.append(separator);
                current.append(s);
                if (canClose) {
                    answer.add(current.toString());
                    current.setLength(0);
                    inProgress = false;
                }
            } else {
                if (canStart && !canClose) {
                    current.append(s);
                    inProgress = true;
                } else {
                    //case where no quotes
                    answer.add(s);
                }

