import java.util.concurrent.atomic.AtomicBoolean;
import org.apache.camel.main.MainDurationEventNotifier;
import org.apache.camel.spi.EventNotifier;
import org.apache.camel.util.ServiceHelper;

                        if (configurationProperties.getMainRunControllerMaxDurationMessages() > 0) {
                            LOG.info("CamelMainRunController will terminate after processing maximum {} messages", configurationProperties.getMainRunControllerMaxDurationMessages());
                            // register lifecycle so we can trigger to shutdown the JVM when maximum number of messages has been processed
                            EventNotifier notifier = new MainDurationEventNotifier(camelContext, configurationProperties.getMainRunControllerMaxDurationMessages(),
                                controller.getCompleted(), controller.getLatch());
                            // register our event notifier
                            ServiceHelper.startService(notifier);
                            camelContext.getManagementStrategy().addEventNotifier(notifier);
                        }

                        LOG.info("Starting CamelMainRunController to ensure the main thread keeps running");
