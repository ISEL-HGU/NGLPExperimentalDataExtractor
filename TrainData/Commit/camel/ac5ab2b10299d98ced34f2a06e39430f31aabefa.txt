         * @param usernameString
         *            representing login username.
         * @param hostString
         *            representing hostname of SSH server.
         * @param portint
         *            representing port number on remote host. Defaults to 22.
         * @param passwordString
         *            representing password for username at remote host.
         * @param pollCommandString
         *            representing the command to send.
         * @param keyPairProviderKeyPairProvider
         *            reference to use in authenticating. If set to 'null', then
         *            will attempt to connect using username/password settings.
         * @param keyTypeString
         *            defining the type of KeyPair to use for authentication.
         * @param timeoutlong
         *            milliseconds to wait.
         * @param certResourceString
         *            file, classpath, or http url for the certificate
        /**
         * Sets the resource path for a known_hosts file
         * 
         * @param knownHostsString
         *            file, classpath, or http url for the certificate
         */
        private String knownHostsResource;
        /**
         * Specifies whether a connection to an unknown host should fail or not.
         * This value is only checked when the property knownHosts is set.
         * 
         * @param boolean boolean flag, whether a connection to an unknown host
         *        should fail
         */
        private Boolean failOnUnknownHost = false;

        public String getKnownHostsResource() {
            return knownHostsResource;
        }

        public void setKnownHostsResource(String knownHostsResource) {
            this.knownHostsResource = knownHostsResource;
        }

        public Boolean getFailOnUnknownHost() {
            return failOnUnknownHost;
        }

        public void setFailOnUnknownHost(Boolean failOnUnknownHost) {
            this.failOnUnknownHost = failOnUnknownHost;
        }
