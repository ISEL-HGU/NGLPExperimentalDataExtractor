import java.net.InetAddress;
import java.net.Socket;
import java.net.UnknownHostException;
import com.jcraft.jsch.SocketFactory;
import org.apache.camel.RuntimeCamelException;
        if (isNotEmpty(sftpConfig.getBindAddress())) {
            session.setSocketFactory(new SocketFactory() {

                @Override
                public OutputStream getOutputStream(Socket socket) throws IOException {
                    return socket.getOutputStream();
                }

                @Override
                public InputStream getInputStream(Socket socket) throws IOException {
                    return socket.getInputStream();
                }

                @Override
                public Socket createSocket(String host, int port) throws IOException, UnknownHostException {
                    return createSocketUtil(host, port, sftpConfig.getBindAddress(), session.getTimeout());
                }
            });
        }


    /*
     * adapted from com.jcraft.jsch.Util.createSocket(String, int, int)
     *
     * added possibility to specify the address of the local network interface, against the
     * connection should bind
     */
    static Socket createSocketUtil(final String host, final int port, final String bindAddress, final int timeout) {
        Socket socket = null;
        if (timeout == 0) {
            try {
                socket = new Socket(InetAddress.getByName(host), port, InetAddress.getByName(bindAddress), 0);
                return socket;
            } catch (Exception e) {
                String message = e.toString();
                if (e instanceof Throwable) {
                    throw new RuntimeCamelException(message, (Throwable)e);
                }
                throw new RuntimeCamelException(message);
            }
        }
        final Socket[] sockp = new Socket[1];
        final Exception[] ee = new Exception[1];
        String message = "";
        Thread tmp = new Thread(new Runnable() {
            public void run() {
                sockp[0] = null;
                try {
                    sockp[0] = new Socket(InetAddress.getByName(host), port, InetAddress.getByName(bindAddress), 0);
                } catch (Exception e) {
                    ee[0] = e;
                    if (sockp[0] != null && sockp[0].isConnected()) {
                        try {
                            sockp[0].close();
                        } catch (Exception eee) { }
                    }
                    sockp[0] = null;
                }
            }
        });
        tmp.setName("Opening Socket "  host);
        tmp.start();
        try {
            tmp.join(timeout);
            message = "timeout: ";
        } catch (java.lang.InterruptedException eee) {
        }
        if (sockp[0] != null && sockp[0].isConnected()) {
            socket = sockp[0];
        } else {
            message = "socket is not established";
            if (ee[0] != null) {
                message = ee[0].toString();
            }
            tmp.interrupt();
            tmp = null;
            throw new RuntimeCamelException(message, ee[0]);
        }
        return socket;
    }
