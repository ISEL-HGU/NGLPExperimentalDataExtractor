            w.write("import org.apache.camel.spi.TriPropertyConfigurer;\n");
            w.write("import org.apache.camel.support.component.PropertyConfigurerSupport;\n");
            w.write("import org.apache.camel.util.function.TriConsumer;\n");
            w.write("public class "  cn  " extends PropertyConfigurerSupport implements TriPropertyConfigurer {\n");
            w.write("    private final Map<String, TriConsumer<CamelContext, Object, Object>> writes = new HashMap<>("  size  ");\n");
            w.write("    public "  cn  "() {\n");
                String setterLambda = setterLambda(en, getOrSet, option.getType(), option.getConfigurationField());
                w.write("        writes.put(\""  option.getName()  "\", (camelContext, endpoint, value) -> "  setterLambda  ");\n");
            w.write("    public Map<String, TriConsumer<CamelContext, Object, Object>> getWriteOptions(CamelContext camelContext) {\n");
            w.write("        return writes;\n");
    private static String setterLambda(String en, String getOrSet, String type, String configurationField) {
        // ((LogEndpoint) endpoint).setGroupSize(property(camelContext, java.lang.Integer.class, value))
        return String.format("((%s) endpoint).%s(property(camelContext, %s.class, value))", en, getOrSet, type);
