import org.apache.camel.Expression;
import org.apache.camel.Service;
import org.apache.camel.builder.ExpressionBuilder;
public class CacheBasedMessageBodyReplacer extends CacheValidate implements Processor, Service {
    private CacheManager cacheManager;
    private Expression key;
        this(cacheName, ExpressionBuilder.constantExpression(key));
    }

    public CacheBasedMessageBodyReplacer(String cacheName, Expression key) {
        String cacheKey = key.evaluate(exchange, String.class);
        if (isValid(cacheManager, cacheName, cacheKey)) {
            Ehcache cache = cacheManager.getCache(cacheName);
            LOG.debug("Replacing Message Body from CacheName {} for key {}", cacheName, cacheKey);
            exchange.getIn().setHeader(CacheConstants.CACHE_KEY, cacheKey);
            exchange.getIn().setBody(cache.get(cacheKey).getObjectValue());
    public Expression getKey() {
        this.key = ExpressionBuilder.constantExpression(key);
    }

    public void setKey(Expression key) {
    @Override
    public void start() throws Exception {
        // Cache the buffer to the specified Cache against the specified key
        if (cacheManager == null) {
            cacheManager = new DefaultCacheManagerFactory().getInstance();
        }
    }

    @Override
    public void stop() throws Exception {
        // noop
    }
