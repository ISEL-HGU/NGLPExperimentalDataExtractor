import org.apache.camel.blueprint.BlueprintCamelStateService;
        ctx.addProperty("bundleStateService", createRef(context, ".camelBlueprint.bundleStateService"));
        // Register single CamelBundleStateService - shared for all bundles and all Blueprint Camel contexts
        registerBundleStateService(context);

    /**
     * There's single instance of {@link BlueprintCamelStateService} that's used by all Blueprint Camel contexts
     * to inform about state of Camel contexts. If Karaf is available, this information will propagate to
     * <em>extended bundle info</em>.
     * See CAMEL-12980
     * @param context
     */
    private void registerBundleStateService(ParserContext context) {
        ComponentDefinitionRegistry componentDefinitionRegistry = context.getComponentDefinitionRegistry();
        ComponentMetadata cm = componentDefinitionRegistry.getComponentDefinition(".camelBlueprint.bundleStateService");
        if (cm == null) {
            MutableBeanMetadata ssm = context.createMetadata(MutableBeanMetadata.class);
            ssm.setId(".camelBlueprint.bundleStateService");
            ssm.setRuntimeClass(BlueprintCamelStateService.class);
            ssm.addProperty("bundleContext", createRef(context, "blueprintBundleContext"));
            ssm.setInitMethod("init");
            ssm.setDestroyMethod("destroy");
            componentDefinitionRegistry.registerComponentDefinition(ssm);
        }
    }

