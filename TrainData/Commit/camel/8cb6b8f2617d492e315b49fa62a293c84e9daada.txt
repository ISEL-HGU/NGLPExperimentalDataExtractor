     * Set whether to make the subscription durable. The durable subscription
     * name to be used can be specified through the subscriptionName property.
     * Default is false. Set this to true to register a durable subscription
     * typically in combination with a subscriptionName value (unless your
     * message listener class name is good enough as subscription name). Only
     * makes sense when listening to a topic (pub-sub domain) therefore this
     * method switches the pubSubDomain flag as well.
     */
    private Boolean subscriptionDurable = false;
    /**
     * Set whether to make the subscription shared. The shared subscription name
     * to be used can be specified through the subscriptionName property.
     * Default is false. Set this to true to register a shared subscription
     * typically in combination with a subscriptionName value (unless your
     * message listener class name is good enough as subscription name). Note
     * that shared subscriptions may also be durable so this flag can (and often
     * will) be combined with subscriptionDurable as well. Only makes sense when
     * listening to a topic (pub-sub domain) therefore this method switches the
     * pubSubDomain flag as well. Requires a JMS 2.0 compatible message broker.
     */
    private Boolean subscriptionShared = false;
    /**
     * Set the name of a subscription to create. To be applied in case of a
     * topic (pub-sub domain) with a shared or durable subscription. The
     * subscription name needs to be unique within this client's JMS client id.
     * Default is the class name of the specified message listener. Note: Only 1
     * concurrent consumer (which is the default of this message listener
     * container) is allowed for each subscription except for a shared
     * subscription (which requires JMS 2.0).
     */
    private String subscriptionName;
    /**
    public Boolean getSubscriptionDurable() {
        return subscriptionDurable;
    }

    public void setSubscriptionDurable(Boolean subscriptionDurable) {
        this.subscriptionDurable = subscriptionDurable;
    }

    public Boolean getSubscriptionShared() {
        return subscriptionShared;
    }

    public void setSubscriptionShared(Boolean subscriptionShared) {
        this.subscriptionShared = subscriptionShared;
    }

    public String getSubscriptionName() {
        return subscriptionName;
    }

    public void setSubscriptionName(String subscriptionName) {
        this.subscriptionName = subscriptionName;
    }

        /**
         * Set whether to make the subscription durable. The durable
         * subscription name to be used can be specified through the
         * "subscriptionName" property.
         * <p>
         * Default is "false". Set this to "true" to register a durable
         * subscription, typically in combination with a "subscriptionName"
         * value (unless your message listener class name is good enough as
         * subscription name).
         * <p>
         * Only makes sense when listening to a topic (pub-sub domain),
         * therefore this method switches the "pubSubDomain" flag as well.
         */
        private Boolean subscriptionDurable = false;
        /**
         * Set whether to make the subscription shared. The shared subscription
         * name to be used can be specified through the "subscriptionName"
         * property.
         * <p>
         * Default is "false". Set this to "true" to register a shared
         * subscription, typically in combination with a "subscriptionName"
         * value (unless your message listener class name is good enough as
         * subscription name). Note that shared subscriptions may also be
         * durable, so this flag can (and often will) be combined with
         * "subscriptionDurable" as well.
         * <p>
         * Only makes sense when listening to a topic (pub-sub domain),
         * therefore this method switches the "pubSubDomain" flag as well.
         * <p>
         * <b>Requires a JMS 2.0 compatible message broker.</b>
         */
        private Boolean subscriptionShared = false;
        /**
         * Set the name of a subscription to create. To be applied in case of a
         * topic (pub-sub domain) with a shared or durable subscription.
         * <p>
         * The subscription name needs to be unique within this client's JMS
         * client id. Default is the class name of the specified message
         * listener.
         * <p>
         * Note: Only 1 concurrent consumer (which is the default of this
         * message listener container) is allowed for each subscription, except
         * for a shared subscription (which requires JMS 2.0).
         */
        private String subscriptionName;

        public Boolean getSubscriptionDurable() {
            return subscriptionDurable;
        }

        public void setSubscriptionDurable(Boolean subscriptionDurable) {
            this.subscriptionDurable = subscriptionDurable;
        }

        public Boolean getSubscriptionShared() {
            return subscriptionShared;
        }

        public void setSubscriptionShared(Boolean subscriptionShared) {
            this.subscriptionShared = subscriptionShared;
        }

        public String getSubscriptionName() {
            return subscriptionName;
        }

        public void setSubscriptionName(String subscriptionName) {
            this.subscriptionName = subscriptionName;
        }
