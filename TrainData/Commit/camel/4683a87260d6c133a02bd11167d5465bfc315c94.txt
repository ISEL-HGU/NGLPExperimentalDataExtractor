        // if there are {{ }}} property placeholders then we need to resolve them to something else
        // as the simple parse cannot resolve them before parsing as we dont run the actual Camel application
        // with property placeholders setup so we need to dummy this by replace the {{ }} to something else
        // therefore we use an more unlikely character: {{XXX}} to ~^XXX^~
        String resolved = simple.replaceAll("\\{\\{(.)\\}\\}", "~^$1^~");

                    instance.getClass().getMethod("createPredicate", String.class).invoke(instance, resolved);
                    instance.getClass().getMethod("createExpression", String.class).invoke(instance, resolved);

                // reverse ~^XXX^~ back to {{XXX}}
                String errMsg = cause.getMessage();
                errMsg = errMsg.replaceAll("\\~\\^(.)\\^\\~", "{{$1}}");

                answer.setError(errMsg);
