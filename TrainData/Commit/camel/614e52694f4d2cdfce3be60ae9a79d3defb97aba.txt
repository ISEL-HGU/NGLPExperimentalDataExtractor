import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
    private static final Logger LOG = LoggerFactory.getLogger(JettyHttpComponent9.class);

            int port = endpoint.getPort();
            result.setPort(port);
            if (sslcf != null) {
                if (getSslSocketConnectorProperties() != null && "https".equals(endpoint.getProtocol())) {
                    // must copy the map otherwise it will be deleted
                    Map<String, Object> properties = new HashMap<String, Object>(getSslSocketConnectorProperties());
                    IntrospectionSupport.setProperties(sslcf, properties);
                    if (properties.size() > 0) {
                        throw new IllegalArgumentException("There are "  properties.size()
                             " parameters that couldn't be set on the SocketConnector."
                             " Check the uri if the parameters are spelt correctly and that they are properties of the SelectChannelConnector."
                             " Unknown parameters=["  properties  "]");
                    }
                }

                LOG.info("Connector on port: {} is using includeCipherSuites: {} excludeCipherSuites: {} includeProtocols: {} excludeProtocols: {}",
                    port, sslcf.getIncludeCipherSuites(), sslcf.getExcludeCipherSuites(), sslcf.getIncludeProtocols(), sslcf.getExcludeProtocols());


