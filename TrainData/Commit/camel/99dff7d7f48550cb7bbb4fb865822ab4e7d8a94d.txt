 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>



    public static void getBlob(Exchange exchange, BlobServiceConfiguration cfg)
            break;

    private static void getBlockBlob(Exchange exchange, BlobServiceConfiguration cfg)



    private static void doGetBlob(CloudBlob client, Exchange exchange, BlobServiceConfiguration cfg)
                os = new FileOutputStream(file);
                opts.getAccessCond(), opts.getRequestOpts(), opts.getOpContext());

    public static CloudBlobContainer createBlobContainerClient(BlobServiceConfiguration cfg)

    public static CloudBlockBlob createBlockBlobClient(BlobServiceConfiguration cfg, boolean isWrite)
        CloudBlockBlob client = (CloudBlockBlob) getConfiguredClient(cfg, BlobType.blockblob, isWrite);

        CloudAppendBlob client = (CloudAppendBlob) getConfiguredClient(cfg, BlobType.appendblob, isWrite);

        CloudPageBlob client = (CloudPageBlob) getConfiguredClient(cfg, BlobType.pageblob, isWrite);

                expectedCls = CloudBlockBlob.class;
                expectedCls = CloudAppendBlob.class;
                expectedCls = CloudPageBlob.class;

                                                           boolean isWrite) {



            .append(cfg.getAccountName())
            .append(BlobServiceConstants.SERVICE_URI_SEGMENT)
            .append("/")
            .append(cfg.getContainerName());
                .append(cfg.getBlobName());

            return opts;
        AccessCondition accessCond =
        BlobRequestOptions requestOpts =
        OperationContext opContext =
