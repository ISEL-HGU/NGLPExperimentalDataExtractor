import com.mongodb.bulk.BulkWriteResult;
import com.mongodb.client.model.BulkWriteOptions;
import com.mongodb.client.model.WriteModel;
        bind(MongoDbOperation.bulkWrite, createDoBulkWrite());
    
    private Function<Exchange, Object> createDoBulkWrite() {
        return exchange -> {
            try {
                MongoCollection<Document> dbCol = calculateCollection(exchange);

                Boolean ordered = exchange.getIn().getHeader(MongoDbConstants.BULK_ORDERED, Boolean.TRUE, Boolean.class);
                BulkWriteOptions options = new BulkWriteOptions().ordered(ordered);

                @SuppressWarnings("unchecked")
                List<WriteModel<Document>> requests = (List<WriteModel<Document>>) exchange.getIn().getMandatoryBody((Class<List<WriteModel<Document>>>)Class.class.cast(List.class));

                BulkWriteResult result = dbCol.bulkWrite(requests, options);
                return result;

            } catch (InvalidPayloadException e) {
                throw new CamelMongoDbException("Invalid payload for bulk write", e);
            }
        };
    }
