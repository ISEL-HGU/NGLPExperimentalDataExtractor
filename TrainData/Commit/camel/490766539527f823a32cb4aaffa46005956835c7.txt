import org.apache.camel.spi.RoutePolicy;

    private static final CountDownLatch LATCH = new CountDownLatch(ADDRESSES.size());
    private static final ScheduledExecutorService EXECUTOR = Executors.newScheduledThreadPool(ADDRESSES.size() * 2);
            EXECUTOR.submit(() -> run(address));
        LATCH.await();

        System.exit(0);
    static void run(Address address) {
                        .withStorageLevel(StorageLevel.MEMORY)
                    LOGGER.info("Member {} ({}), is now master", view.getLocalMember().getId(), address);

                    // Shutdown the context later on so the next one should take
                    // the leadership
                    EXECUTOR.schedule(latch::countDown, 10, TimeUnit.SECONDS);
            context.addService(cluster);
                    RoutePolicy policy = ClusteredRoutePolicy.forView(view);

                    fromF("timer:%s-1?period=2s", id)
                        .routeId(id  "-1")
                        .routePolicy(policy)
                        .log("${routeId} (1) - master is: ${header.ClusterMaster}");
                    fromF("timer:%s-2?period=5s", id)
                        .routeId(id  "-2")
                        .routePolicy(policy)
                        .setHeader("ClusterMaster")
                            .body(b -> view.getMaster().getId())
                        .log("${routeId} (2) - master is: ${header.ClusterMaster}");

            LATCH.countDown();

        LOGGER.info("Done {}", address);
