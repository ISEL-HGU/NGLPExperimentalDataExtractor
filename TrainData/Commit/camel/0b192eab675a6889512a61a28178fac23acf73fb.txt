import java.util.regex.Matcher;
import java.util.regex.Pattern;
    private static final Pattern RAW_PATTERN = Pattern.compile("RAW\\([^\\)]\\)");
    private static List<Pair> checkRAW(String s) {
        Matcher matcher = RAW_PATTERN.matcher(s);
        List<Pair> answer = new ArrayList<>();
        // Check all occurrences
        while (matcher.find()) {
            // TODO: should likely be matcher.end() - 1
            answer.add(new Pair(matcher.start(), matcher.end()));
        }
        return answer;
    }
    
    private static boolean isRaw(int index, List<Pair>pairs) {
        for (Pair pair : pairs) {
            if (index < pair.left) {
                return false;
            } else {
                if (index >= pair.left) {
                    if (index <= pair.right) {
                        return true;
                    } else {
                        continue;
                    }
                }
            }
        }
        return false;
    }
    
    private static class Pair {
        int left;
        int right;
        Pair(int left, int right) {
            this.left = left;
            this.right = right;
        }
    }
    
        List<Pair> rawPairs;
            rawPairs = checkRAW(s); 
                    if (isHexDigit(next) && isHexDigit(next2) && !isRaw(i, rawPairs)) {
