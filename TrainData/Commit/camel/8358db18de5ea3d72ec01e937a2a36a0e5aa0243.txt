                                        try {
                                            String text = IOHelper.loadText(is);
                                            IOHelper.close(is);
                                            javaClassSource = (JavaClassSource) Roaster.parse(text);
                                        } catch (IOException e) {
                                            // ignore
                                            getLog().warn("Cannot load Java source: "  path  " from classpath due "  e.getMessage());
                                        }
                                    desc = sanitizeDescription(desc, false);
                                    if (desc == null || desc.isEmpty()) {
                                        desc = ". ";
    private String extractJavaDocFromMethod(JavaClassSource clazz, Method method) {

        // maybe its from the super class
        String st = clazz.getSuperType();
        if (st != null && !"java.lang.Object".equals(st) && !"Object".equals(st)) {
            st = clazz.resolveType(st);
            // find this file cia classloader
            String path = st.replace('.', '/')  ".java";
            InputStream is = sourcesClassLoader.getResourceAsStream(path);
            if (is != null) {
                String text = null;
                try {
                    text = IOHelper.loadText(is);
                    IOHelper.close(is);
                    clazz = (JavaClassSource) Roaster.parse(text);
                    getLog().debug("Loaded source code: "  clazz);
                    return extractJavaDocFromMethod(clazz, method);
                } catch (IOException e) {
                    // ignore
                    getLog().warn("Cannot load Java source: "  path  " from classpath due "  e.getMessage());
                }
            }
        }
