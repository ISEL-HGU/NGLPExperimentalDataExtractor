import com.amazonaws.services.mq.model.EngineType;
import com.amazonaws.services.mq.model.User;
import java.util.List;

        String brokerEngine;
        String brokerEngineVersion;
        String instanceType;
        List<User> users;
        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(MQConstants.BROKER_ENGINE))) {
            brokerEngine = exchange.getIn().getHeader(MQConstants.BROKER_ENGINE, String.class);
            request.withEngineType(EngineType.fromValue(brokerEngine));
        } else {
            request.withEngineType(EngineType.ACTIVEMQ.name());
        }
        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(MQConstants.BROKER_ENGINE_VERSION))) {
            brokerEngineVersion = exchange.getIn().getHeader(MQConstants.BROKER_ENGINE_VERSION, String.class);
            request.withEngineVersion(brokerEngineVersion);
        } else {
            throw new IllegalArgumentException("Broker Engine Version must be specified");
        }
        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(MQConstants.BROKER_INSTANCE_TYPE))) {
            instanceType = exchange.getIn().getHeader(MQConstants.BROKER_INSTANCE_TYPE, String.class);
            request.withHostInstanceType(instanceType);
        } else {
            throw new IllegalArgumentException("Instance Type must be specified");
        }
        if (ObjectHelper.isNotEmpty(exchange.getIn().getHeader(MQConstants.BROKER_USERS))) {
            users = exchange.getIn().getHeader(MQConstants.BROKER_USERS, List.class);
            request.withUsers(users);
        } else {
            throw new IllegalArgumentException("A Users list must be specified");
        }
