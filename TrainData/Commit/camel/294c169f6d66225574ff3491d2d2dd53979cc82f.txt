import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
import org.ehcache.UserManagedCache;
import org.ehcache.config.CacheConfiguration;
import org.ehcache.config.builders.UserManagedCacheBuilder;
    private final ConcurrentMap<String, UserManagedCache<?, ?>> userCaches;

        this.userCaches = new ConcurrentHashMap<>();
    public synchronized void start() throws Exception {
    public synchronized void stop() throws Exception {

        // Clean up any User managed cache
        userCaches.values().forEach(UserManagedCache::close);
    @SuppressWarnings("unchecked")
            CacheConfiguration<K, V> cacheConfiguration = configuration.getConfiguration();

            if (cacheConfiguration != null) {
                cache = cacheManager.createCache(name, cacheConfiguration);
            } else {
                // If a cache configuration is not provided, create a User Managed
                // Cache
                cache = (Cache<K, V>)userCaches.computeIfAbsent(
                    name,
                    key -> UserManagedCacheBuilder.newUserManagedCacheBuilder(keyType, valueType).build(true)
                );
            }
