         * provides the build in strategies: - none - No read lock is in use -
         * component - changed - Changed is using file length/modification
         * to set the check frequency. - fileLock - is for using
         * supports distributed file locks. - rename - rename is for using a try
         * to rename the file as a test if we can get exclusive read-lock. -
         * supports that. - idempotent-changed - (only for file component)
         * - idempotent-rename - (only for file component) idempotent-rename is
         * which is the default, replaces the existing file. - Append - adds
         * content to the existing file. - Fail - throws a
         * existing file. - Ignore - silently ignores the problem and does not
         * override the existing file, but assumes everything is okay. - Move -
         * move any existing files, before writing the target file. - TryRename
         * is only applicable if tempFileName option is in use. This allows to
         * try renaming the file from the temporary name to the actual name,
         * without doing any exists check. This check may be faster on some file
         * systems and especially FTP servers.
         * which is the default, replaces the existing file. - Append - adds
         * content to the existing file. - Fail - throws a
         * existing file. - Ignore - silently ignores the problem and does not
         * override the existing file, but assumes everything is okay. - Move -
         * move any existing files, before writing the target file. - TryRename
         * is only applicable if tempFileName option is in use. This allows to
         * try renaming the file from the temporary name to the actual name,
         * without doing any exists check. This check may be faster on some file
         * systems and especially FTP servers.
