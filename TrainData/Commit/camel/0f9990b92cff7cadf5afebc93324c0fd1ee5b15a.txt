import com.github.dockerjava.api.command.ConnectToNetworkCmd;
import com.github.dockerjava.api.command.CreateNetworkCmd;
import com.github.dockerjava.api.command.RemoveNetworkCmd;
import com.github.dockerjava.api.model.Mount;
        case CREATE_NETWORK:
            result = executeCreateNetworkRequest(client, message).exec();
            break;
        case REMOVE_NETWORK:
            result = executeRemoveNetworkRequest(client, message).exec();
            break;
        case CONNECT_NETWORK:
            result = executeConnectToNetworkRequest(client, message).exec();
            break;
    /**
     * Produces a network create request
     *
     * @param client
     * @param message
     * @return
     */
    private CreateNetworkCmd executeCreateNetworkRequest(DockerClient client, Message message) {

        LOGGER.debug("Executing Docker Network Create Request");

        String networkName = DockerHelper.getProperty(DockerConstants.DOCKER_NETWORK_NAME, configuration, message, String.class);

        ObjectHelper.notNull(networkName, "Network Name must be specified");

        CreateNetworkCmd createNetworkCmd = client.createNetworkCmd().withName(networkName);

        return createNetworkCmd;

    }

    /**
    * Produces a network remove request
    *
    * @param client
    * @param message
    * @return
    */
    private RemoveNetworkCmd executeRemoveNetworkRequest(DockerClient client, Message message) {

        LOGGER.debug("Executing Docker Network Remove Request");

        String networkId = DockerHelper.getProperty(DockerConstants.DOCKER_NETWORK_ID, configuration, message, String.class);

        ObjectHelper.notNull(networkId, "Network ID must be specified");

        RemoveNetworkCmd removeNetworkCmd = client.removeNetworkCmd(networkId);

        return removeNetworkCmd;

    }

    /**
     * Produces a network connect request
     *
     * @param client
     * @param message
     * @return
     */
    private ConnectToNetworkCmd executeConnectToNetworkRequest(DockerClient client, Message message) {

        LOGGER.debug("Executing Docker Network Connect Request");

        String networkId = DockerHelper.getProperty(DockerConstants.DOCKER_NETWORK_NAME, configuration, message, String.class);
        String containerId = DockerHelper.getProperty(DockerConstants.DOCKER_CONTAINER_ID, configuration, message, String.class);

        ObjectHelper.notNull(networkId, "Network ID must be specified");
        ObjectHelper.notNull(containerId, "Container ID must be specified");

        ConnectToNetworkCmd connectToNetworkCmd = client.connectToNetworkCmd().withNetworkId(networkId).withContainerId(containerId);

        return connectToNetworkCmd;

    }

