import org.dozer.config.SettingsKeys;
import org.dozer.el.DefaultELEngine;
import org.dozer.el.ELEngine;
import org.dozer.el.ELExpressionFactory;
import org.dozer.el.NoopELEngine;
import org.dozer.el.TcclELEngine;
import org.dozer.util.RuntimeUtils;
        configureSettings();
        Mapper mapper;
        if (configuration == null) {
            mapper = DozerBeanMapperBuilder.buildDefault();
        } else {
            mapper = DozerBeanMapperBuilder.create()
                    .withMappingFiles(configuration.getMappingFiles())
                    .withCustomConverters(configuration.getCustomConverters())
                    .withEventListeners(configuration.getEventListeners())
                    .withCustomConvertersWithIds(configuration.getCustomConvertersWithId())
                    .withMappingBuilders(configuration.getBeanMappingBuilders())
                    .withCustomFieldMapper(configuration.getCustomFieldMapper())
                    .withELEngine(createELEngine())
                    .build();
    private void configureSettings() {
        System.setProperty(SettingsKeys.CLASS_LOADER_BEAN, DozerThreadContextClassLoader.class.getName());
    private ELEngine createELEngine() {
        ELEngine answer;
        ClassLoader appcl = camelContext.getApplicationContextClassLoader();
        ClassLoader auxcl = appcl == null ? DozerEndpoint.class.getClassLoader() : appcl;
        if (ELExpressionFactory.isSupported(auxcl)) {
            if (RuntimeUtils.isOSGi()) {
                answer = new TcclELEngine(ELExpressionFactory.newInstance(auxcl), auxcl);
                answer = new DefaultELEngine(ELExpressionFactory.newInstance());
        } else {
            LOG.warn("Expressions are not supported by Dozer. Are you missing javax.el dependency?");
            answer = new NoopELEngine();
        return answer;
