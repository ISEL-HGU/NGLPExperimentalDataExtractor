import java.io.Reader;
import org.apache.camel.spi.ClassResolver;
            jjmatchedKind = 16;
            return 15;
            return 25;
            jjmatchedKind = 16;
            return 15;
         }
         return -1;
      case 2:
         if ((active0 & 0x4L) != 0L)
         {
            jjmatchedKind = 16;
            jjmatchedPos = 2;
            return 15;
         return jjStartNfaWithStates_0(0, 1, 25);
         return jjMoveNfa_0(8, 0);
         return jjMoveStringLiteralDfa3_0(active0, 0x4L);
private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 32:
         if ((active0 & 0x4L) != 0L)
            return jjStopAtPos(3, 2);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
   jjnewStateCnt = 25;
               case 8:
                     if (kind > 16)
                        kind = 16;
                     jjCheckNAdd(15);
                     if (kind > 8)
                        kind = 8;
                     if (kind > 11)
                        kind = 11;
                     jjCheckNAddTwoStates(17, 19);
                  }
                  else if (curChar == 41)
                  {
                     if (kind > 12)
                        kind = 12;
                     if (kind > 10)
                        kind = 10;
                     if (kind > 4)
                        kind = 4;
                  else if (curChar == 39)
                     jjCheckNAdd(13);
                     jjstateSet[jjnewStateCnt] = 9;
                     jjstateSet[jjnewStateCnt] = 5;
               case 25:
                     jjCheckNAddTwoStates(24, 3);
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAdd(4);
                     if (kind > 11)
                        kind = 11;
                     jjCheckNAdd(19);
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAddTwoStates(22, 23);
                     jjCheckNAddTwoStates(21, 1);
                  if (kind > 4)
                     kind = 4;
                  kind = 10;
                  if (kind > 10)
                     kind = 10;
                  if (curChar != 41)
                  if (kind > 12)
                     kind = 12;
                  if (kind > 12)
                     kind = 12;
               case 9:
                     jjCheckNAdd(10);
               case 10:
                  jjCheckNAdd(10);
                  break;
               case 11:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt] = 9;
                  break;
               case 12:
                  if (curChar == 39)
                     jjCheckNAdd(13);
                  break;
               case 13:
                  if ((0x7ff609c00000000L & l) != 0L)
                     jjCheckNAddTwoStates(13, 14);
                  break;
               case 14:
                  if (curChar == 39 && kind > 15)
                     kind = 15;
                  if ((0x7ff609c00000000L & l) == 0L)
                  if (kind > 16)
                     kind = 16;
                  jjCheckNAdd(15);
                  if (curChar != 40)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAddTwoStates(17, 19);
                  if ((0x3ff200000000000L & l) != 0L)
                     jjCheckNAddTwoStates(17, 18);
                  if (curChar == 41 && kind > 3)
                     kind = 3;
                  break;
               case 19:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(19);
                  break;
               case 20:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(0, 5);
                  break;
               case 21:
                     jjCheckNAddTwoStates(21, 1);
                  break;
               case 22:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(22, 23);
                  break;
               case 23:
                  if (curChar != 40)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjCheckNAdd(19);
                  break;
               case 24:
                  if ((0x100002600L & l) != 0L)
                     jjCheckNAddTwoStates(24, 3);
               case 8:
               case 15:
                  if ((0x2ffffffeaffffffeL & l) == 0L)
                     break;
                  if (kind > 16)
                     kind = 16;
                  jjCheckNAdd(15);
                  break;
               case 5:
                  if (curChar == 123)
                     jjCheckNAdd(6);
                  break;
               case 6:
                  if ((0x2ffffffeaffffffeL & l) != 0L)
                     jjCheckNAddTwoStates(6, 7);
                  break;
               case 7:
                  if (curChar == 125 && kind > 13)
                     kind = 13;
                  break;
                  jjstateSet[jjnewStateCnt] = 10;
               case 13:
                     jjAddStates(8, 9);
      if ((i = jjnewStateCnt) == (startsAt = 25 - (jjnewStateCnt = startsAt)))
   21, 1, 22, 23, 24, 3, 6, 7, 13, 14, 
"", "\40", "\117\125\124\40", null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, };
private final int[] jjrounds = new int[25];
private final int[] jjstateSet = new int[50];
   for (i = 25; i-- > 0;)
