import org.apache.camel.language.simple.SimpleLanguage;
        return resolveOptionalExternalScript(camelContext, null, expression);
    }

    /**
     * Resolves the expression/predicate whether it refers to an external script on the file/classpath etc.
     * This requires to use the prefix <tt>resource:</tt> such as <tt>resource:classpath:com/foo/myscript.groovy</tt>,
     * <tt>resource:file:/var/myscript.groovy</tt>.
     * <p/>
     * If not then the returned value is returned as-is.
     * <p/>
     * If the exchange is provided (not null), then the external script can be referred via simple language for dynamic values, etc.
     * <tt>resource:classpath:${header.myFileName}</tt>
     */
    public static String resolveOptionalExternalScript(CamelContext camelContext, Exchange exchange, String expression) {

                if (exchange != null && SimpleLanguage.hasSimpleFunction(external)) {
                    SimpleLanguage simple = (SimpleLanguage) exchange.getContext().resolveLanguage("simple");
                    external = simple.createExpression(external).evaluate(exchange, String.class);
                }

