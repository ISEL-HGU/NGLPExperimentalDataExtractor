import com.amazonaws.services.sqs.model.BatchResultErrorEntry;
import com.amazonaws.services.sqs.model.SendMessageBatchRequest;
import com.amazonaws.services.sqs.model.SendMessageBatchRequestEntry;
import com.amazonaws.services.sqs.model.SendMessageBatchResult;
import com.amazonaws.services.sqs.model.SendMessageBatchResultEntry;
    
    @Override
    public SendMessageBatchResult sendMessageBatch(SendMessageBatchRequest request) {
        SendMessageBatchResult result = new SendMessageBatchResult();
        Collection<SendMessageBatchResultEntry> entriesSuccess = new ArrayList<SendMessageBatchResultEntry>();
        SendMessageBatchResultEntry entry1 = new SendMessageBatchResultEntry();
        SendMessageBatchResultEntry entry2 = new SendMessageBatchResultEntry();
        entry1.setId("team1");
        entry2.setId("team2");
        entriesSuccess.add(entry1);
        entriesSuccess.add(entry2);
        Collection<BatchResultErrorEntry> entriesFail = new ArrayList<BatchResultErrorEntry>();
        BatchResultErrorEntry entry3 = new BatchResultErrorEntry();
        BatchResultErrorEntry entry4 = new BatchResultErrorEntry();
        entry3.setId("team1");
        entry4.setId("team4");
        entriesFail.add(entry3);
        entriesFail.add(entry4);
        result.setSuccessful(entriesSuccess);
        result.setFailed(entriesFail);
        return result;
    }
