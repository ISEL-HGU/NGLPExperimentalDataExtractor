     * Notice the suppress is a best effort as there may still be some logs coming
     * This option is default false.
     *
     * You should have good reasons to set this option to false as it means that the routes
     * Multiple patterns can be specified separated by comma.
     * For example to include all classes starting with Foo use: &#42;&#42;/Foo*
     * To include all routes form a specific package use: com/mycompany/foo/*
     * To include all routes form a specific package and its sub-packages use double wildcards: com/mycompany/foo/**
     * And to include all routes from two specific packages use: com/mycompany/foo/*,com/mycompany/stuff/*
     * For example to exclude all classes starting with Bar use: &#42;&#42;/Bar*
     * To exclude all routes form a specific package use: com/mycompany/bar/*
     * To exclude all routes form a specific package and its sub-packages use double wildcards: com/mycompany/bar/**
     * And to exclude all routes from two specific packages use: com/mycompany/bar/*,com/mycompany/stuff/*
     *
     *
     * You must use either file: or classpath: as prefix to load
     * from sub directories and a name pattern such as file:/var/app/secret/*.properties
     *
     * is created in the java.io.tmpdir directory.
     * The default threshold is 128kb.
     * Use -1 to disable overflow to disk.
     * Sets whether if just any of the org.apache.camel.spi.StreamCachingStrategy.SpoolRule rules
     * returns true then shouldSpoolCache(long) returns true, to allow spooling to disk.
     * If this option is false, then all the org.apache.camel.spi.StreamCachingStrategy.SpoolRule must
     * return true.
     *
     * The default value is false which means that all the rules must return true.
     *
     * The default size is 4096.
     * This option is default true.
     *
     * The default value is true.
     *
     * The default pattern is: Camel (#camelId#) thread ##counter# - #name#
     *
     * Where #camelId# is the name of the CamelContext.
     * and #counter# is a unique incrementing counter.
     * and #name# is the regular thread name.
     *
     * You can also use #longName# which is the long thread name which can includes endpoint parameters etc.
