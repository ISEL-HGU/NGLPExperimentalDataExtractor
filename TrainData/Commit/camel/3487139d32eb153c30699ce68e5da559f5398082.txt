    private Producer<byte[]> producer;
        if(producer == null) {
            createProducer();
        byte[] body;
            body = exchange.getContext().getTypeConverter()
                    .mandatoryConvertTo(byte[].class, exchange, message.getBody());
            body = PulsarMessageUtils.serialize(message.getBody());
        }
        producer.send(body);
    }

    private synchronized void createProducer() throws org.apache.pulsar.client.api.PulsarClientException {
        if (producer == null) {
            final String topic = pulsarEndpoint.getTopic();
            String producerName = pulsarEndpoint.getPulsarConfiguration().getProducerName();
            if (producerName == null) {
                producerName = topic  "-"  Thread.currentThread().getId();
            }
            final ProducerBuilder<byte[]> producerBuilder = pulsarEndpoint
                    .getPulsarClient()
                    .newProducer()
                    .producerName(producerName)
                    .topic(topic);
            producer = producerBuilder.create();
        }
    }

    @Override
    protected void doStop() throws Exception {
        log.debug("Stopping producer: {}", this);
        if (producer != null) {
