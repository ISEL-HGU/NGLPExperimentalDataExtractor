import java.util.concurrent.atomic.LongAdder;
    protected final LongAdder noopCounter = new LongAdder();
    protected final LongAdder attemptCounter = new LongAdder();
    protected final LongAdder missCounter = new LongAdder();
    protected final LongAdder hitCounter = new LongAdder();
    protected final LongAdder failedCounter = new LongAdder();
                failedCounter.increment();
                missCounter.increment();
                hitCounter.increment();
                failedCounter.increment();
                missCounter.increment();
                hitCounter.increment();
                failedCounter.increment();
                missCounter.increment();
                hitCounter.increment();
                noopCounter.increment();
                noopCounter.increment();
                noopCounter.increment();
            attemptCounter.increment();
            return noopCounter.longValue();
            return attemptCounter.longValue();
            return hitCounter.longValue();
            return missCounter.longValue();
            return failedCounter.longValue();
            noopCounter.reset();
            attemptCounter.reset();
            hitCounter.reset();
            missCounter.reset();
            failedCounter.reset();
