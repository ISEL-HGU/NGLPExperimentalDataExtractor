         * This options controls what happens when a consumer is processing an
         * exchange and it fails. If the option is <tt>false</tt> then the
         * consumer continues to the next message and processes it. If the
         * option is <tt>true</tt> then the consumer breaks out, and will seek
         * back to offset of the message that caused a failure, and then
         * re-attempt to process this message. However this can lead to endless
         * processing of the same message if its bound to fail every time, eg a
         * poison message. Therefore its recommended to deal with that for
         * example by using Camel's error handler.
         */
        private Boolean breakOnFirstError = true;
        /**
        public Boolean getBreakOnFirstError() {
            return breakOnFirstError;
        }

        public void setBreakOnFirstError(Boolean breakOnFirstError) {
            this.breakOnFirstError = breakOnFirstError;
        }

