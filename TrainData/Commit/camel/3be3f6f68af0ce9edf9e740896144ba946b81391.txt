
     * @param channel       the channel to sent the {@code message} to
     * @param message       the message to send
     * @param callback      where to report the outcome
     * @param timeoutMillis the timeout in milliseconds
                             long timeoutMillis) throws IOException {
    /**
     * {@inheritDoc}
     */
     * @param peerFilter    a {@link Predicate} to apply to the set of peers obtained via {@link #delegate}'s
     *                      {@link WebSocketProtocolHandshakeHandler#getPeerConnections()}
     * @param message       the message to send
     * @param timeout       in milliseconds
                        final Exchange camelExchange, final AsyncCallback camelCallback) throws IOException {
