                if (ObjectHelper.isNotEmpty(value) && ObjectHelper.isNotEmpty(option)) {
                    properties.put(option, value);
                }
                if (ObjectHelper.isNotEmpty(value) && ObjectHelper.isNotEmpty(option)) {
                    hystrixProperties.put(option, value);
                }
                if (ObjectHelper.isNotEmpty(value) && ObjectHelper.isNotEmpty(option)) {
                    restProperties.put(option, value);
                }
                if (ObjectHelper.isNotEmpty(value) && ObjectHelper.isNotEmpty(option)) {
                    Map<String, Object> values = properties.getOrDefault(component, new LinkedHashMap<>());
                    values.put(option, value);
                    properties.put(component, values);
                }
                if (ObjectHelper.isNotEmpty(value) && ObjectHelper.isNotEmpty(option)) {
                    properties.put(option, value);
                }
                if (ObjectHelper.isNotEmpty(value) && ObjectHelper.isNotEmpty(option)) {
                    Map<String, Object> values = properties.getOrDefault(component, new LinkedHashMap<>());
                    values.put(option, value);
                    properties.put(component, values);
                }
                if (ObjectHelper.isNotEmpty(value) && ObjectHelper.isNotEmpty(option)) {
                    Map<String, Object> values = properties.getOrDefault(dataformat, new LinkedHashMap<>());
                    values.put(option, value);
                    properties.put(dataformat, values);
                }
                if (ObjectHelper.isNotEmpty(value) && ObjectHelper.isNotEmpty(option)) {
                    Map<String, Object> values = properties.getOrDefault(language, new LinkedHashMap<>());
                    values.put(option, value);
                    properties.put(language, values);
                }
