import com.box.sdk.BoxItem;
 *
 *
 *
     *
     *
     *
     *
     * @param check
     *            - if the file name is already used, call the uploadNewVersion instead.
            Long size, boolean check, ProgressListener listener) {
            BoxFile boxFile = null;
            boolean uploadNewFile = true;
            if (check) {
                BoxSearchManager bsm = new BoxSearchManager(boxConnection);
                Collection<BoxItem> res = bsm.searchFolder(parentFolderId, fileName);
                if (!res.isEmpty()) {
                    BoxItem boxItem = res.iterator().next();
                    boxFile = uploadNewFileVersion(boxItem.getID(), content, modified, size, listener);
                    uploadNewFile = false;
                }
            if (uploadNewFile){
                BoxFolder parentFolder = new BoxFolder(boxConnection, parentFolderId);
                FileUploadParams uploadParams = new FileUploadParams();
                uploadParams.setName(fileName);
                uploadParams.setContent(content);
                if (created != null) {
                    uploadParams.setCreated(created);
                }
                if (modified != null) {
                    uploadParams.setModified(modified);
                }
                if (size != null) {
                    uploadParams.setSize(size);
                }
                if (listener != null) {
                    uploadParams.setProgressListener(listener);
                }

                boxFile = parentFolder.uploadFile(uploadParams).getResource();
            }
            return boxFile;
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *

    /**
     * Does a pre-verification before upload, to check if the filename already exists or if there is permission to upload.
     * It will throw a BoxAPIResponseException if there is any problem in uploading the given file.
     *
     * @param parentFolderId
     *            - the id of parent folder.
     * @param fileName
     *            the name to give the uploaded file.
     * @param size
     *            - the size of the file's content used for monitoring the upload's progress.
     *
     */
    public void checkUpload(String fileName, String parentFolderId, Long size) {
        try {
            LOG.debug("Preflight check file with name '"  fileName  "' to parent_folder(id="  parentFolderId  ")");
            if (parentFolderId == null) {
                throw new IllegalArgumentException("Parameter 'parentFolderId' can not be null");
            }
            if (fileName == null) {
                throw new IllegalArgumentException("Parameter 'fileName' can not be null");
            }
            if (size == null) {
                throw new IllegalArgumentException("Parameter 'size' can not be null");
            }

            BoxFolder parentFolder = new BoxFolder(boxConnection, parentFolderId);
            parentFolder.canUpload(fileName, size);
        } catch (BoxAPIException e) {
            throw new RuntimeException(
                String.format("Box API returned the error code %d\n\n%s", e.getResponseCode(), e.getResponse()), e);
        }
    }
