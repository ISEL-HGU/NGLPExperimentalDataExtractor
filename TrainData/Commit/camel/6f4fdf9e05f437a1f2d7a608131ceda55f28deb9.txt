        String json;

        json = loadModelJson(files, "hystrixConfiguration");
            createHystrixConfigurationSource(pkg, model, "camel.hystrix");
        }

        // Consul
        json = loadModelJson(files, "consulServiceDiscovery");
        if (json != null) {
            OtherModel model = generateOtherModel(json);

            int pos = model.getJavaType().lastIndexOf(".");
            String pkg = model.getJavaType().substring(0, pos)  ".springboot";

            // Generate properties, auto-configuration happens in camel-consul-starter
            createHystrixConfigurationSource(pkg, model, "camel.cloud.consul.service-discovery");
    private void createHystrixConfigurationSource(String packageName, OtherModel model, String propertiesPrefix) throws MojoFailureException {
            if ("id".equalsIgnoreCase(name) || "parent".equalsIgnoreCase(name) || "camelContext".equalsIgnoreCase(name)) {
                // Skip them as they should not be set via spring boot
        configClass.addAnnotation("org.springframework.boot.context.properties.ConfigurationProperties").setStringValue("prefix", propertiesPrefix);
            .getJavaDoc().setFullText("Enable the component");
