        sb.append("boolean useCustomizers = globalConfiguration.getCustomizer().isEnabled() && componentConfiguration.getCustomizer().isEnabled();\n");
        sb.append("if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {\n");
        sb.append("    for (ComponentCustomizer<").append(shortJavaType).append("> customizer : customizers) {\n");
        sb.append("        LOGGER.debug(\"Configure component {}, with customizer {}\", component, customizer);\n");
        sb.append("        customizer.customize(component);\n");
        sb.append("boolean useCustomizers = globalConfiguration.getCustomizer().isEnabled() && dataformatConfiguration.getCustomizer().isEnabled();\n");
        sb.append("if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {\n");
        sb.append("    for (DataFormatCustomizer<").append(shortJavaType).append("> customizer : customizers) {\n");
        sb.append("        LOGGER.debug(\"Configure dataformat {}, with customizer {}\", dataformat, customizer);\n");
        sb.append("        customizer.customize(dataformat);\n");
        sb.append("boolean useCustomizers = globalConfiguration.getCustomizer().isEnabled() && languageConfiguration.getCustomizer().isEnabled();\n");
        sb.append("if (useCustomizers && ObjectHelper.isNotEmpty(customizers)) {\n");
        sb.append("    for (LanguageCustomizer<").append(shortJavaType).append("> customizer : customizers) {\n");
        sb.append("        LOGGER.debug(\"Configure language {}, with customizer {}\", language, customizer);\n");
        sb.append("        customizer.customize(language);\n");
