        return Optional.of(new AtomixClusterMember(leader));
            .map(AtomixClusterMember::new)
            group.election().onElection(term -> fireLeadershipChangedEvent(new AtomixClusterMember(term.leader())));
            group.onJoin(member -> fireMemberAddedEvent(new AtomixClusterMember(member)));
            group.onLeave(member -> fireMemberRemovedEvent(new AtomixClusterMember(member)));

            LOGGER.debug("Join group {}", getNamespace());
            localMember.join();
                if (ObjectHelper.isEmpty(id) || configuration.isEphemeral()) {
                    LOGGER.debug("Group {} joined with id {}", group, member.id());
                } else {
                    LOGGER.debug("Joining group: {}, with id: {}", group, id);
                    member = group.join(id).join();
        AtomixClusterMember(GroupMember member) {
            if (group == null) {
                return false;
            }
            if (member == null) {
                return false;
            }

