import com.mongodb.BasicDBList;
import com.mongodb.BasicDBObject;
import com.mongodb.DBObject;
import com.mongodb.client.DistinctIterable;
        bind(MongoDbOperation.findDistinct, createDoDistinct());
    private Function<Exchange, Object> createDoDistinct() {
        return exchange -> {
            Iterable<String> result = new ArrayList<>();
            MongoCollection<Document> dbCol = calculateCollection(exchange);

            // get the parameters out of the Exchange Header
            String distinctFieldName = exchange.getIn().getHeader(MongoDbConstants.DISTINCT_QUERY_FIELD, String.class);
            //BasicDBObject query = exchange.getIn().getBody(BasicDBObject.class);
            Bson query = exchange.getIn().getBody(Bson.class);
            DistinctIterable<String> ret = null;
            if (query != null) {
                ret = dbCol.distinct(distinctFieldName, query, String.class);
            } else {
                ret = dbCol.distinct(distinctFieldName, String.class);
            }

            try {
                ret.iterator().forEachRemaining(((List<String>) result)::add);
                exchange.getOut().setHeader(MongoDbConstants.RESULT_PAGE_SIZE, ((List<String>) result).size());
            } finally {
                ret.iterator().close();
            }
            return result;
        };
    }

