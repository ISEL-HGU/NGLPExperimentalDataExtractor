import org.apache.camel.AfterPropertiesConfigured;
import org.apache.camel.spi.Language;
        super((String)null); // we dont use @XmlValue but the attributes instead
        setRef(beanName);
        setMethod(method);
        super((String)null); // we dont use @XmlValue but the attributes instead
        super((String)null); // we dont use @XmlValue but the attributes instead
        setBeanType(type);
        setBeanTypeName(type.getName());
        setMethod(method);
        // special for bean language where we need to configure it first
        Language lan = camelContext.resolveLanguage("bean");
        configureLanguage(camelContext, lan);
        // .. and create expression with null value as we use the configured properties instead
        Expression exp = lan.createExpression(null);
        if (exp instanceof AfterPropertiesConfigured) {
            ((AfterPropertiesConfigured) exp).afterPropertiesConfigured(camelContext);
        return exp;
    }
    protected void configureLanguage(CamelContext camelContext, Language language) {
        if (instance != null) {
            setProperty(language, "bean", instance);
        }
        if (beanType != null) {
            setProperty(language, "beanType", beanType);
        }
        if (ref != null) {
            setProperty(language, "ref", ref);
        }
        if (method != null) {
            setProperty(language, "method", method);
        }
