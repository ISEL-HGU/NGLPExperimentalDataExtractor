import java.util.concurrent.atomic.AtomicBoolean;
    private final AtomicBoolean aggregateRepositoryWarned = new AtomicBoolean();
        // special for some repository implementations
        if (aggregationRepository instanceof RecoverableAggregationRepository) {
            boolean valid = oldExchange == null || answer.getExchangeId().equals(oldExchange.getExchangeId());
            if (!valid && aggregateRepositoryWarned.compareAndSet(false, true)) {
                LOG.warn("AggregationStrategy should return the oldExchange instance instead of the newExchange whenever possible"
                     " as otherwise this can lead to unexpected behavior with some RecoverableAggregationRepository implementations");
            }
        }

