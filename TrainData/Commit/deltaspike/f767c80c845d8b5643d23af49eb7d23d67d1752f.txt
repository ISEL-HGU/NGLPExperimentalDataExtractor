import java.util.logging.Level;
import java.util.logging.Logger;
import org.jboss.arquillian.config.impl.extension.ConfigExtension;
    private static final Logger LOG = Logger.getLogger(ConfigExtension.class.getName());


        registerConfigMBean();

        logConfiguration();
    }

    private void logConfiguration()
    {
        Boolean logConfig = ConfigResolver.resolve(ConfigResolver.DELTASPIKE_LOG_CONFIG).as(Boolean.class).getValue();
        if (logConfig != null && logConfig && LOG.isLoggable(Level.INFO))
        {
            StringBuilder sb = new StringBuilder(1 << 16);

            // first log out the config sources in descendent ordinal order
            sb.append("ConfigSources: ");
            ConfigSource[] configSources = ConfigResolver.getConfigSources();
            for (ConfigSource configSource : configSources)
            {
                sb.append("\n\t").append(configSource.getOrdinal()).append(" - ").append(configSource.getConfigName());
            }

            // and all the entries in no guaranteed order
            Map<String, String> allProperties = ConfigResolver.getAllProperties();
            sb.append("\n\nConfigured Values:");
            for (Map.Entry<String, String> entry : allProperties.entrySet())
            {
                sb.append("\n\t").append(entry.getKey()).append(" = ").append(entry.getValue());
            }

            LOG.info(sb.toString());
        }
