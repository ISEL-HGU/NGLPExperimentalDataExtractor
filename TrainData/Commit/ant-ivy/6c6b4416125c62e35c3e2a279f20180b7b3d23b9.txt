import org.apache.ivy.core.resolve.ResolveProcessException;
            run(args, true);
    /**
     * A method that allows to run embedded Ivy as if it were launched from CLI
     * (e.g., for use with REPL in Java 9).
     *
     * @param args an array of command line arguments
     * @return null if asked for usage or version, or if anything fails during resolve, publish or
     * launch; a ResolveReport on success
     * @throws Exception if something goes wrong
     */
    public static ResolveReport run(String[] args) throws Exception {
        return run(args, false);
    }
    /*
     * For backwards compatibility and testing
     */
    static void run(CommandLineParser parser, String[] args) throws Exception {
        if (Arrays.asList(args).contains("-?")) {
            usage(parser, false);
        run(parser.parse(args), true);
    }

    private static ResolveReport run(String[] args, boolean isCli) throws Exception {
        CommandLineParser parser = getParser();

        // parse the command line arguments
        CommandLine line;
        try {
            line = parser.parse(args);
        } catch (ParseException pe) {
            // display usage and and rethrow
            usage(parser, false);
            throw new ParseException(pe.getMessage());
        }

        if (line.hasOption("?")) {
            usage(parser, line.hasOption("deprecated"));
            return null;
        }

        return run(line, isCli);
    }

    @SuppressWarnings("deprecation")
    private static ResolveReport run(CommandLine line, boolean isCli) throws Exception {
            return null;
            if (isCli) {
                System.exit(1);
            }

            StringBuilder sb = new StringBuilder();
            for (String problem : report.getAllProblemMessages()) {
                if (sb.length() > 0) {
                    sb.append("\n");
                }
                sb.append(problem);
            }
            throw new ResolveProcessException(sb.toString());

        return report;
