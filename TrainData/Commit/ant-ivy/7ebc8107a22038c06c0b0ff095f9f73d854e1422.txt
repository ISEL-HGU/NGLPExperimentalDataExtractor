import java.lang.reflect.Method;
        Authenticator original = (getJavaVersion() < 9) ? getTheAuthenticator()
                : getDefaultAuthenticator();
        if (original instanceof IvyAuthenticator) {
            return;
        try {
            Authenticator.setDefault(new IvyAuthenticator(original));
        } catch (SecurityException e) {
            if (!securityWarningLogged) {
                securityWarningLogged = true;
                Message.warn("Not enough permissions to set the IvyAuthenticator. "
                         "HTTP(S) authentication will be disabled!");
    private static Authenticator getDefaultAuthenticator() {
        try {
            final Method m = Authenticator.class.getDeclaredMethod("getDefault");
            return (Authenticator) m.invoke(null);
        } catch (final Throwable t) {
            handleReflectionException(t);
        }
        return null;
    }

    private static Authenticator getTheAuthenticator() {
        try {
            Field f = Authenticator.class.getDeclaredField("theAuthenticator");
            f.setAccessible(true);
            return (Authenticator) f.get(null);
        } catch (final Throwable t) {
            handleReflectionException(t);
        }
        return null;
    }

    private static void handleReflectionException(final Throwable t) {
        Message.debug("Error occurred while getting the original authenticator: "
                 t.getMessage());
    }

    private static int getJavaVersion() {
        // See https://docs.oracle.com/javase/8/docs/technotes/guides/versioning/spec/versioning2.html#wp90002
        final String[] version = System.getProperty("java.version").split("\\.");
        final int major = Integer.parseInt(version[0]);
        return major == 1 ? Integer.parseInt(version[1]) : major;
    }
