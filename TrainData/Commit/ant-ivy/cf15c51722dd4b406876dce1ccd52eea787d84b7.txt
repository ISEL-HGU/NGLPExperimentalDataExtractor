import org.apache.ivy.core.module.descriptor.DependencyDescriptor;
    private static final String SEPARATOR = " ";
        out.println(extraToString(mrid.getExtraAttributes(), "\t\t"));
        details.append(extraToString(extraAttributes, SEPARATOR));
                out.println(String.format("\t\t\t\t<license name=\"%s\"%s/>",
                        XMLHelper.escape(license.getName()),
                        license.getUrl() == null ? "" : " url=\""  XMLHelper.escape(license.getUrl())  "\""));
    private String extraToString(Map<String, String> extraAttributes, String prefix) {
        StringBuilder sb = new StringBuilder();
        for (Map.Entry<String, String> entry : extraAttributes.entrySet()) {
            if (sb.length() > 0 && !SEPARATOR.equals(prefix)) {
                sb.append(System.lineSeparator());
            }
            sb.append(prefix).append("extra-").append(entry.getKey()).append("=\"")
                    .append(XMLHelper.escape(entry.getValue())).append("\"");
        }
        return sb.toString();
    }

        for (Caller caller : dep.getCallers(report.getConfiguration())) {
            final DependencyDescriptor dependencyDescriptor = caller.getDependencyDescriptor();
                    XMLHelper.escape(dependencyDescriptor.getDependencyRevisionId().getRevision()),
                    XMLHelper.escape(dependencyDescriptor.getDynamicConstraintDependencyRevisionId().getRevision()),
                    XMLHelper.escape(caller.getModuleRevisionId().getRevision()),
                    extraToString(dependencyDescriptor.getExtraAttributes(), SEPARATOR)));
            out.print(extraToString(adr.getArtifact().getExtraAttributes(), SEPARATOR));
