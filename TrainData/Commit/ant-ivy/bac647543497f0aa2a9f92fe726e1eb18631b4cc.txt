            int lockCount = hasLock(file, currentThread);
            if (isDebugLocking()) {
                debugLocking("current status for "  file  " is "  lockCount
                         " held locks: "  getCurrentLockHolderNames(file));
            }
            if (lockCount < 0) {
                /* Another thread in this process holds the lock; we need to wait */
                    debugLocking("waiting for another thread to release the lock: "
                             getCurrentLockHolderNames(file));
            } else if (lockCount > 0) {
                int holdLocks = incrementLock(file, currentThread);
                    debugLocking("reentrant lock acquired on "  file  " in "
                             (System.currentTimeMillis() - start)  "ms"  " - hold locks = "
                             holdLocks);
                return true;
            } else {
                /* No prior lock on this file is held at all */
                if (locker.tryLock(file)) {
                        debugLocking("lock acquired on "  file  " in "
                                 (System.currentTimeMillis() - start)  "ms");
                    incrementLock(file, currentThread);
        int holdLocks = decrementLock(file, currentThread);
        if (holdLocks == 0) {
            locker.unlock(file);
                debugLocking("lock released on "  file);
        } else {
            if (isDebugLocking()) {
                debugLocking("reentrant lock released on "  file  " - hold locks = "
                         holdLocks);
