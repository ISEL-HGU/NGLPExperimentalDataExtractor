import org.apache.ivy.core.settings.TimeoutConstraint;
import org.apache.ivy.util.url.URLHandlerRegistry;

import java.nio.file.Files;
    public static boolean prepareCopy(final File src, final File dest, final boolean overwrite) throws IOException {
            // If overwrite is specified as "true" and the dest file happens to be a
            // symlink, we delete the "link" (a.k.a unlink it). This is for cases
            // like https://issues.apache.org/jira/browse/IVY-1498 where not unlinking
            // the existing symlink can lead to potentially overwriting the wrong "target" file
            // TODO: This behaviour is intentionally hardcoded here for now, since I don't
            // see a reason (yet) to expose it as a param of this method. If any use case arises
            // we can have this behaviour decided by the callers of this method, by passing a value for this
            // param
            final boolean unlinkSymlinkIfOverwrite = true;
                if (Files.isSymbolicLink(dest.toPath()) && unlinkSymlinkIfOverwrite) {
                    // unlink (a.k.a delete the symlink path)
                    dest.delete();
                } else if (!dest.canWrite()) {
                    // if the file *isn't* "writable" (see javadoc of File.canWrite() on what that means)
                    // we delete it.
